{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\admin\\\\Edit.js\";\nimport React from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { read, edit } from './api';\nimport { useParams, Redirect } from \"react-router-dom\";\nexport default function Edit() {\n  var _this = this;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    level: \"\",\n    loading: false,\n    redirectToPage: false,\n    error: false,\n    reload: false,\n    loadingBtn: false,\n    token: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var firstName = values.firstName,\n      lastName = values.lastName,\n      middleName = values.middleName,\n      phone = values.phone,\n      email = values.email,\n      password = values.password,\n      password2 = values.password2,\n      level = values.level,\n      error = values.error,\n      loading = values.loading,\n      reload = values.reload,\n      redirectToPage = values.redirectToPage,\n      loadingBtn = values.loadingBtn,\n      token = values.token;\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value))); //setSecret(s => ({ ...s, value: target.value }));\n    };\n  };\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loadingBtn: true\n    }));\n\n    if (firstName === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Admin first Name is required', 'error');\n    }\n\n    if (middleName === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Admin Middle Name is required', 'error');\n    }\n\n    if (lastName === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Admin Last Name is required', 'error');\n    }\n\n    if (email === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Email is required', 'error');\n    }\n\n    if (phone === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Phone Number is required', 'error');\n    }\n\n    if (password === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Password is required', 'error');\n    }\n\n    if (password !== password2) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Password must match each other', 'error');\n    }\n\n    handleUpdate();\n  };\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                firstName: firstName,\n                lastName: lastName,\n                middleName: middleName,\n                phone: phone,\n                email: email,\n                password: password,\n                password2: password2,\n                level: level\n              };\n              _context.next = 3;\n              return edit(id, user, token);\n\n            case 3:\n              data = _context.sent;\n              console.log(data);\n\n              if (data) {\n                _context.next = 8;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 8:\n              if (!data.error) {\n                _context.next = 11;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 11:\n              if (!data.message) {\n                _context.next = 16;\n                break;\n              }\n\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              Toast.fire({\n                animation: true,\n                type: 'success',\n                title: 'Request is successful'\n              });\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false,\n                redirectToPage: true\n              }));\n              return _context.abrupt(\"return\", Swal.fire('saved...', data.message, 'success'));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/admin/users/read\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      }, \"Wait !!!.\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }, \"Requesting for Admin  data\"))))))));\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }\n      }, \"Error in reading this user .\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 41\n        }\n      }, \"Admin data failed to read, Try again \", /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: handleReload,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 82\n        }\n      }, \"Reload\"), \" \"))))))));\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false,\n      error: false,\n      reload: !reload\n    }));\n  };\n\n  React.useEffect(function () {\n    var ignore = false;\n\n    var bootstrap = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var data, Toast;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: true\n                  });\n                });\n                _context2.next = 3;\n                return read(id);\n\n              case 3:\n                data = _context2.sent;\n\n                if (ignore) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                if (data) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                }); //setSecret(s => ({...s, countSecrets: s.countSecrets + 1}));\n\n                return _context2.abrupt(\"return\");\n\n              case 9:\n                if (!data.error) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                Swal.fire('Oops...', data.error, 'error'); //setValues({...values, loading:false, error:true})\n\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context2.abrupt(\"return\");\n\n              case 13:\n                if (!data.message) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                Toast = Swal.mixin({\n                  toast: true,\n                  timerProgressBar: true,\n                  position: 'top-end',\n                  showConfirmButton: false,\n                  timer: 3000\n                });\n                Toast.fire({\n                  showClass: true,\n                  type: 'success',\n                  title: data.message\n                });\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: false,\n                    firstName: data.data.firstName,\n                    lastName: data.data.lastName,\n                    phone: data.data.phone,\n                    middleName: data.data.middleName,\n                    email: data.data.email,\n                    level: data.data.level\n                  });\n                });\n                return _context2.abrupt(\"return\", Swal.fire('Great', data.message, 'success'));\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function bootstrap() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    bootstrap();\n    return function () {\n      ignore = true;\n    };\n  }, [reload, id]);\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, redirectUser(), isError(), loading ? isLoading() : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }, \"Update the admin data\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 53\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"First name\",\n    onChange: handleChange(\"firstName\"),\n    value: firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 53\n    }\n  }, \"Middle Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Middle name\",\n    onChange: handleChange(\"middleName\"),\n    value: middleName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 53\n    }\n  }, \"Phone \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"phone\",\n    onChange: handleChange(\"phone\"),\n    value: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 53\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange(\"password\"),\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 53\n    }\n  })), loadingBtn ? \"loading ...\" : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 82\n    }\n  }, \"Update Admin Data ..\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 49\n    }\n  }, \"Last name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Last name\",\n    onChange: handleChange(\"lastName\"),\n    value: lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 49\n    }\n  }, \"email \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"email\",\n    onChange: handleChange(\"email\"),\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 49\n    }\n  }, \"Admin Role \"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleChange(\"level\"),\n    value: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 53\n    }\n  }, \"Select Role\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 53\n    }\n  }, \"Admin\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 53\n    }\n  }, \"Moderator\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 49\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password Confirmation\",\n    onChange: handleChange(\"password2\"),\n    value: password2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 49\n    }\n  })))))))));\n}","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/admin/Edit.js"],"names":["React","Row","Col","Card","Form","Button","Aux","Swal","read","edit","useParams","Redirect","Edit","id","useState","firstName","lastName","middleName","phone","email","password","password2","level","loading","redirectToPage","error","reload","loadingBtn","token","values","setValues","handleChange","name","event","target","value","submit","preventDefault","fire","handleUpdate","user","data","console","log","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser","isLoading","isError","handleReload","useEffect","ignore","bootstrap","v","showClass"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {read, edit } from './api';\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\nexport default function Edit() {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [values, setValues] = React.useState({\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        middleName:\"\",\r\n        phone:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        password2:\"\",\r\n        level:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        error:false,\r\n        reload:false,\r\n        loadingBtn:false,\r\n        token:\"\",\r\n    })\r\n\r\n    const {firstName, lastName, middleName, phone, email, password, password2, level, error, loading, reload, redirectToPage, loadingBtn, token} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n        //setSecret(s => ({ ...s, value: target.value }));\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loadingBtn:true})\r\n        if(firstName===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Admin first Name is required', 'error');\r\n        }\r\n        if(middleName===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Admin Middle Name is required', 'error');\r\n        }\r\n        if(lastName===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Admin Last Name is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Email is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Phone Number is required', 'error');\r\n        }\r\n        if(password ===\"\") {\r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password is required', 'error');\r\n        }\r\n        if(password !== password2) {\r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n        handleUpdate();\r\n    }\r\n\r\n    const handleUpdate =async ()=>{\r\n        const user = {firstName, lastName, middleName, phone, email, password, password2, level}\r\n        const data = await edit(id,user,token);\r\n        console.log(data)\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n\r\n        if(data.message){\r\n            \r\n            let Toast = Swal.mixin({\r\n                toast: true,\r\n                timerProgressBar: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000\r\n            });\r\n    \r\n            Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n           setValues({...values, loadingBtn:false, redirectToPage:true})\r\n           return Swal.fire('saved...', data.message, 'success')\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/users/read\" />\r\n        }\r\n    };\r\n\r\n    const isLoading= () => {\r\n        if(loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Wait !!!.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Requesting for Admin  data</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Error in reading this user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Admin data failed to read, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:false, error:false, reload:!reload})\r\n    }\r\n\r\n    \r\n\r\n    React.useEffect(() => {\r\n        let ignore = false;\r\n        const bootstrap = async ()=>{\r\n            setValues(v => ({...v, loading:true}))\r\n            const data = await read(id);\r\n            if (!ignore){\r\n                if(!data){\r\n                    Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\r\n                    setValues(v => ({...v, loading:false, error:true}))  \r\n                    //setSecret(s => ({...s, countSecrets: s.countSecrets + 1}));\r\n                    return  \r\n                }\r\n                if(data.error){\r\n                    Swal.fire('Oops...', data.error, 'error')\r\n                    //setValues({...values, loading:false, error:true})\r\n                    setValues(v => ({...v, loading:false, error:true})) \r\n                    return \r\n                }\r\n        \r\n                if(data.message){\r\n                    let Toast = Swal.mixin({\r\n                        toast: true,\r\n                        timerProgressBar: true,\r\n                        position: 'top-end',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n                    Toast.fire({\r\n                        showClass: true,\r\n                        type: 'success',\r\n                        title: data.message\r\n                    })\r\n                    setValues(v => ({...v, loading:false, error:false, firstName:data.data.firstName, lastName:data.data.lastName, phone:data.data.phone, middleName:data.data.middleName, email:data.data.email, level:data.data.level}))\r\n                    return Swal.fire('Great', data.message, 'success');\r\n                } \r\n            }\r\n         \r\n        }\r\n        bootstrap()\r\n        return () => { ignore = true };\r\n    },[reload, id])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            {isError()}\r\n            {loading ? isLoading() :\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Update the admin data</Card.Title>\r\n                            </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>First name</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"First name\" onChange={handleChange(\"firstName\")} value={firstName} />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Middle Name</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"Middle name\" onChange={handleChange(\"middleName\")} value={middleName} />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Phone </Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicPassword\">\r\n                                                    <Form.Label>Password</Form.Label>\r\n                                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                                </Form.Group>\r\n\r\n                                                {\r\n                                                    loadingBtn ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Update Admin Data ..</Button>\r\n                                                }\r\n                                            </Form>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                <Form.Label>Last name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Last name\" onChange={handleChange(\"lastName\")} value={lastName} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                <Form.Label>email </Form.Label>\r\n                                                <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Admin Role </Form.Label>\r\n                                                <Form.Control as=\"select\" onChange={handleChange(\"level\")} value={level}>\r\n                                                    <option>Select Role</option>\r\n                                                    <option value=\"1\">Admin</option>\r\n                                                    <option value=\"2\">Moderator</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password Confirmation</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}