{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\admin\\\\Delete.js\";\nimport React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { remove } from './api'; //import { Redirect,  useParams} from 'react-router-dom';\n\nimport { useParams, Redirect } from \"react-router-dom\";\nexport default function Delete() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reload = _React$useState2[0],\n      setreload = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      seterror = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      redirectToPage = _React$useState6[0],\n      setRedirectToPage = _React$useState6[1];\n  /*\r\n  const [values, setValues] = React.useState({\r\n      redirectToPage:false,\r\n      reload:false,\r\n      error:false\r\n  })\r\n  */\n  //const {redirectToPage, reload, error} = values;\n\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return React.createElement(Redirect, {\n        to: \"/admin/users/read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Error in Delete user .\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Admin data Failed to delete, Try again \", React.createElement(Button, {\n        variant: \"primary\",\n        onClick: handleReload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Reload\"), \" \"))))))));\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    seterror(false);\n    setreload(!reload);\n  };\n\n  React.useEffect(function () {\n    var bootstrap =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data, Toast;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return remove(id);\n\n              case 2:\n                data = _context.sent;\n\n                if (data) {\n                  _context.next = 7;\n                  break;\n                }\n\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n                seterror(true);\n                return _context.abrupt(\"return\");\n\n              case 7:\n                if (!data.error) {\n                  _context.next = 11;\n                  break;\n                }\n\n                Swal.fire('Oops...', data.error, 'error');\n                seterror(true);\n                return _context.abrupt(\"return\");\n\n              case 11:\n                if (data.message) {\n                  Swal.fire('Oops...', data.message, 'success');\n                  setRedirectToPage(true); //return setValues({...values, redirectToPage:true, loading:false, error:false})\n                }\n\n                Toast = Swal.mixin({\n                  toast: true,\n                  timerProgressBar: true,\n                  position: 'top-end',\n                  showConfirmButton: false,\n                  timer: 3000\n                });\n                return _context.abrupt(\"return\", Toast.fire({\n                  showClass: true,\n                  type: 'success',\n                  title: data.message\n                }));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function bootstrap() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    bootstrap(); //effect\n\n    return function () {\n      bootstrap(); //cleanup\n    };\n  }, [reload, id]);\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, redirectUser(), isError());\n}","map":{"version":3,"sources":["C:\\Users\\VP\\web\\src\\screen\\admin\\admin\\Delete.js"],"names":["React","Row","Col","Card","Button","Aux","Swal","remove","useParams","Redirect","Delete","id","useState","reload","setreload","error","seterror","redirectToPage","setRedirectToPage","redirectUser","isError","handleReload","event","preventDefault","useEffect","bootstrap","data","fire","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","showClass","type","title"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Button,} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {  remove} from './api';\r\n//import { Redirect,  useParams} from 'react-router-dom';\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\nexport default function Delete() {\r\n\r\n    let { id } = useParams();\r\n    const [reload, setreload] = React.useState(false)\r\n    const [error, seterror] = React.useState(false)\r\n    const [redirectToPage, setRedirectToPage] = React.useState(false)\r\n\r\n    /*\r\n    const [values, setValues] = React.useState({\r\n        redirectToPage:false,\r\n        reload:false,\r\n        error:false\r\n    })\r\n    */\r\n    //const {redirectToPage, reload, error} = values;\r\n\r\n \r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/users/read\" />\r\n        }\r\n    };\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Error in Delete user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Admin data Failed to delete, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        seterror(false)\r\n        setreload(!reload)\r\n    }\r\n\r\n    \r\n    React.useEffect(() => {\r\n        const bootstrap = async ()=>{\r\n            const data = await remove(id);\r\n            if(!data){\r\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n                seterror(true)\r\n                return\r\n                //return setValues({...values, loading:false, error:true})\r\n            }\r\n    \r\n            if(data.error){\r\n                Swal.fire('Oops...', data.error, 'error')\r\n                seterror(true)\r\n                return\r\n                //return setValues({...values, loading:false, error:true})\r\n            }\r\n    \r\n            if(data.message){\r\n                Swal.fire('Oops...', data.message, 'success')\r\n                setRedirectToPage(true)\r\n                //return setValues({...values, redirectToPage:true, loading:false, error:false})\r\n            }\r\n            let Toast = Swal.mixin({\r\n                toast: true,\r\n                timerProgressBar: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000\r\n            });\r\n            return Toast.fire({\r\n                showClass: true,\r\n                type: 'success',\r\n                title: data.message\r\n            })\r\n        }\r\n        bootstrap()\r\n        //effect\r\n        return () => {\r\n            bootstrap()\r\n            //cleanup\r\n        }\r\n    },[reload, id])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            {isError()}\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}