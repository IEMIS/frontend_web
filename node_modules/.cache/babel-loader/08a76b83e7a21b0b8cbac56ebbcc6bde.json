{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\school\\\\One.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { useParams, Redirect, Link } from \"react-router-dom\";\nimport { read } from './api';\nimport { isAuthenticated } from '../../Auth/admin/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function One() {\n  _s();\n\n  var _this = this;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState({\n    loading: false,\n    redirectToPage: false,\n    error: false,\n    reload: false,\n    load: []\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var loading = values.loading,\n      error = values.error,\n      reload = values.reload,\n      redirectToPage = values.redirectToPage,\n      load = values.load;\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Wait !!!.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Requesting for District  data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Error in reading this user .\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: [\"failed to read district data, Try again \", /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"primary\",\n                        onClick: handleReload,\n                        children: \"Reload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 58,\n                        columnNumber: 85\n                      }, _this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false,\n      error: false,\n      reload: !reload\n    }));\n  };\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/admin/schools/read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, _this);\n    }\n  };\n\n  React.useEffect(function () {\n    var bootstrap = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var Auth, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return isAuthenticated();\n\n              case 2:\n                Auth = _context.sent;\n                _context.next = 5;\n                return read(id, Auth.token);\n\n              case 5:\n                data = _context.sent;\n\n                if (data) {\n                  _context.next = 10;\n                  break;\n                }\n\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context.abrupt(\"return\");\n\n              case 10:\n                if (!data.error) {\n                  _context.next = 14;\n                  break;\n                }\n\n                Swal.fire('Oops...', data.error, 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context.abrupt(\"return\");\n\n              case 14:\n                if (!data.message) {\n                  _context.next = 17;\n                  break;\n                }\n\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: false,\n                    load: data.data\n                  });\n                });\n                return _context.abrupt(\"return\", Swal.fire('Great', data.message, 'success'));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function bootstrap() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    bootstrap();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [redirectUser(), isLoading(), isError(), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin/schools/read\",\n              children: \" Read School \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: load.names\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(One, \"t1lHMkTHo+NCXQBesa6pxdS1Axg=\", false, function () {\n  return [useParams];\n});\n\n_c = One;\n\nvar _c;\n\n$RefreshReg$(_c, \"One\");","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/school/One.js"],"names":["React","Row","Col","Card","Button","Aux","Swal","useParams","Redirect","Link","read","isAuthenticated","One","id","useState","loading","redirectToPage","error","reload","load","values","setValues","isLoading","isError","handleReload","event","preventDefault","redirectUser","useEffect","bootstrap","Auth","token","data","fire","v","message","names"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport { useParams, Redirect, Link } from \"react-router-dom\";\r\nimport { read} from './api';\r\nimport { isAuthenticated } from '../../Auth/admin/api';\r\n\r\nexport default function One() {\r\n    let { id } = useParams();\r\n\r\n    const [values, setValues] = React.useState({\r\n        loading:false,\r\n        redirectToPage:false,\r\n        error:false,\r\n        reload:false,\r\n        load:[]\r\n    })\r\n    const { loading, error, reload, redirectToPage, load } = values\r\n\r\n    const isLoading= () => {\r\n        if(loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Wait !!!.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Requesting for District  data</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Error in reading this user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>failed to read district data, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:false, error:false, reload:!reload})\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/schools/read\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const bootstrap = async () =>{\r\n            const Auth = await isAuthenticated();\r\n            const data = await read(id, Auth.token);\r\n            if(!data){\r\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\r\n                setValues(v => ({...v, loading:false, error:true}))  \r\n                return  \r\n            }\r\n            if(data.error){\r\n                Swal.fire('Oops...', data.error, 'error')\r\n                setValues(v => ({...v, loading:false, error:true})) \r\n                return \r\n            }\r\n            if(data.message){\r\n                setValues(v => ({...v, loading:false, error:false, load:data.data}));\r\n                return Swal.fire('Great', data.message, 'success');\r\n            } \r\n        }\r\n        bootstrap()\r\n    }, [id])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            {isLoading()}\r\n            {isError()}\r\n            <Row>\r\n                <Col>\r\n                    <Card.Header>\r\n                        <Card.Title><Link to=\"/admin/schools/read\" > Read School </Link></Card.Title>\r\n                    </Card.Header>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {\r\n                    load.names\r\n                }\r\n            </Row>\r\n\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}