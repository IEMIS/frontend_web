{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\Auth\\\\teacher\\\\Reset.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport './../../../assets/scss/style.scss';\nimport Aux from \"../../../hoc/_Aux\";\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\nimport Swal from 'sweetalert2';\nimport { reset } from './api';\nimport Navigation from '../welcome/components/Navigation'; //class SignIn extends React.Component {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Reset = function Reset() {\n  _s();\n\n  //render () {\n  var _useState = useState({\n    loading: false,\n    resetToken: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    redirectToPage: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var loading = values.loading,\n      password = values.password,\n      passwordConfirmation = values.passwordConfirmation,\n      resetToken = values.resetToken,\n      redirectToPage = values.redirectToPage;\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({\n        error: false\n      }, name, event.target.value)));\n    };\n  };\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n\n    if (resetToken === \"\") {\n      Swal.fire('Oops...', 'reset token is required!', 'error');\n      return setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n    }\n\n    if (password === \"\") {\n      Swal.fire('Oops...', 'password is required!', 'error');\n      return setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n    }\n\n    if (password !== passwordConfirmation) {\n      Swal.fire('Oops...', 'password must match each other!', 'error');\n      return setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n    }\n\n    handleReset();\n  };\n\n  var handleReset = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                resetToken: resetToken,\n                password: password,\n                passwordConfirmation: passwordConfirmation\n              };\n              _context.next = 3;\n              return reset(user);\n\n            case 3:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 7;\n                break;\n              }\n\n              Swal.fire('Oops...', 'Internal server error, Please, check your internet connection', 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false\n              })));\n\n            case 7:\n              if (!data.error) {\n                _context.next = 10;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false\n              })));\n\n            case 10:\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              Swal.fire(' :)', data.message, 'success');\n              _context.next = 14;\n              return Toast.fire({\n                animation: true,\n                type: 'success',\n                title: 'password successfully reset'\n              });\n\n            case 14:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false,\n                redirectToPage: true\n              }));\n              console.log({\n                data: data\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleReset() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/auth/school/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [redirectUser(), /*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-bg\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"r\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"r s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"r s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"r\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"feather icon-unlock auth-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-4\",\n              children: \"Teacher | Reset Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"input\",\n                className: \"form-control\",\n                onChange: handleChange(\"resetToken\"),\n                value: resetToken,\n                placeholder: \"Reset Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                onChange: handleChange(\"password\"),\n                value: password,\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                onChange: handleChange(\"passwordConfirmation\"),\n                value: passwordConfirmation,\n                placeholder: \"password confirmation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, _this), loading ? \"Loading \" : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary shadow-2 mb-4\",\n              onClick: submit,\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 60\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2 text-muted\",\n              children: [\"I know password? \", /*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/auth/school/signin\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 81\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 13\n  }, _this); //}\n};\n\n_s(Reset, \"JLUhPfalSVK93GXd6EisqGeu76I=\");\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/Auth/teacher/Reset.js"],"names":["React","useState","NavLink","Redirect","Aux","Breadcrumb","Swal","reset","Navigation","Reset","loading","resetToken","password","passwordConfirmation","redirectToPage","values","setValues","handleChange","name","event","error","target","value","submit","preventDefault","fire","handleReset","user","data","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","message","animation","type","title","console","log","redirectUser"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\n\r\nimport './../../../assets/scss/style.scss';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\r\nimport Swal from 'sweetalert2'\r\n\r\nimport {reset} from './api';\r\nimport Navigation from '../welcome/components/Navigation';\r\n\r\n//class SignIn extends React.Component {\r\n\r\nconst Reset = () => {\r\n    //render () {\r\n        const [values, setValues] = useState({\r\n            loading:false,\r\n            resetToken:\"\",\r\n            password:\"\",\r\n            passwordConfirmation:\"\",\r\n            redirectToPage:false\r\n        })\r\n        const {loading, password, passwordConfirmation, resetToken, redirectToPage} = values;\r\n\r\n        const handleChange = name => event => {\r\n            setValues({ ...values, error: false, [name]: event.target.value });\r\n        };\r\n\r\n        const submit = event =>{\r\n            event.preventDefault();\r\n            setValues({...values, loading:true})\r\n            if(resetToken===\"\"){\r\n                Swal.fire('Oops...', 'reset token is required!', 'error')\r\n                return setValues({...values, loading:false})\r\n            }\r\n            if(password===\"\"){\r\n                Swal.fire('Oops...', 'password is required!', 'error')\r\n                return setValues({...values, loading:false})\r\n            }\r\n\r\n            if(password !== passwordConfirmation){\r\n                Swal.fire('Oops...', 'password must match each other!', 'error')\r\n                return setValues({...values, loading:false})\r\n            }\r\n\r\n            handleReset(); \r\n        }\r\n        const handleReset = async () =>{\r\n            let user = {resetToken, password, passwordConfirmation}\r\n            const data  = await reset(user);\r\n            if(!data){\r\n                Swal.fire('Oops...', 'Internal server error, Please, check your internet connection', 'error')\r\n                return setValues({...values, loading:false})\r\n            }\r\n            \r\n            if(data.error){\r\n                Swal.fire('Oops...', data.error, 'error')\r\n                return setValues({...values, loading:false})\r\n            }\r\n\r\n            let Toast = Swal.mixin({\r\n                toast: true,\r\n                timerProgressBar: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000\r\n            });\r\n\r\n            Swal.fire(' :)', data.message, 'success')\r\n\r\n            await Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'password successfully reset'\r\n            })\r\n            setValues({...values, loading:false, redirectToPage:true})\r\n       \r\n            console.log({data})\r\n        }\r\n\r\n        const redirectUser = () => {\r\n            if (redirectToPage){\r\n                return <Redirect to=\"/auth/school/login\" />\r\n            }\r\n        };\r\n        return(\r\n            <Aux>\r\n                {redirectUser()}\r\n                <Breadcrumb/>\r\n                <Navigation />\r\n                <div className=\"auth-wrapper\">\r\n                    <div className=\"auth-content\">\r\n                        <div className=\"auth-bg\">\r\n                            <span className=\"r\"/>\r\n                            <span className=\"r s\"/>\r\n                            <span className=\"r s\"/>\r\n                            <span className=\"r\"/>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"mb-4\">\r\n                                    <i className=\"feather icon-unlock auth-icon\"/>\r\n                                </div>\r\n                                <h3 className=\"mb-4\">Teacher | Reset Password </h3>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input type=\"input\" className=\"form-control\"  onChange={handleChange(\"resetToken\")} value={resetToken} placeholder=\"Reset Token\"/>\r\n                                </div>\r\n                            \r\n                                <div className=\"input-group mb-3\">\r\n                                    <input type=\"password\" className=\"form-control\"  onChange={handleChange(\"password\")} value={password} placeholder=\"Password\"/>\r\n                                </div>\r\n                                <div className=\"input-group mb-4\">\r\n                                    <input type=\"password\" className=\"form-control\" onChange={handleChange(\"passwordConfirmation\")} value={passwordConfirmation} placeholder=\"password confirmation\"/>\r\n                                </div>\r\n                    \r\n                                {\r\n                                    loading ? \"Loading \" : <button className=\"btn btn-primary shadow-2 mb-4\" onClick={submit}>Reset Password</button>\r\n                                }\r\n                                \r\n                                <p className=\"mb-2 text-muted\">I know password? <NavLink to=\"/auth/school/signin\">Login</NavLink></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Aux>\r\n        );\r\n    //}\r\n}\r\n\r\nexport default Reset;"]},"metadata":{},"sourceType":"module"}