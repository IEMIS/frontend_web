{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\district\\\\View.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { reads } from './api';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport Datatable from 'react-bs-datatable';\nimport { isAuthenticated } from '../../Auth/admin/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Read() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      datas = _React$useState2[0],\n      setDatas = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      reload = _React$useState8[0],\n      setReload = _React$useState8[1];\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h3\",\n                  children: \"Wait loading data ...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"District List is loading \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 32,\n                      columnNumber: 37\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h3\",\n                  children: \"Error in Loading Data.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: [\"Districts data Failed to Load, you can refresh \", /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"primary\",\n                        onClick: handleReload,\n                        children: \"Reload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 57,\n                        columnNumber: 92\n                      }, _this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setError(false);\n    setLoading(true);\n    setReload(!reload);\n  };\n\n  var boot = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var Auth, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return isAuthenticated();\n\n            case 3:\n              Auth = _context.sent;\n              _context.next = 6;\n              return reads(Auth.token);\n\n            case 6:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 12;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              setLoading(false);\n              setError(true);\n              return _context.abrupt(\"return\");\n\n            case 12:\n              if (!data.error) {\n                _context.next = 17;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              setLoading(false);\n              setError(true);\n              return _context.abrupt(\"return\");\n\n            case 17:\n              if (!data.message) {\n                _context.next = 23;\n                break;\n              }\n\n              setLoading(false);\n              setError(false);\n              setDatas(data.data); //return Swal.fire('Successful....', data.message, 'success')\n\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              return _context.abrupt(\"return\", Toast.fire({\n                showClass: true,\n                type: 'success',\n                title: data.message\n              }));\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function boot() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var ViewData = function ViewData() {\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage District data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, _this), datas.length > 0 ? /*#__PURE__*/_jsxDEV(Datatable, {\n        tableHeaders: header,\n        tableBody: body(datas),\n        rowsPerPage: 10,\n        rowsPerPageOption: [5, 10, 15, 20, 30, 40, 50, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, _this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, _this);\n  };\n\n  var header = [{\n    title: 'SN',\n    prop: 'id',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'Full Names',\n    prop: 'names',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'Email',\n    prop: 'email',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'Phone Number',\n    prop: 'phone',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'Address',\n    prop: 'level',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'Status',\n    prop: 'status',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'District Head',\n    prop: 'staffs',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'Last Update ',\n    prop: 'date',\n    filterable: true,\n    sortable: true\n  }, {\n    title: 'Details',\n    prop: 'edit',\n    cell: function cell(row) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/districts/edit/\".concat(row.edit),\n        children: \" Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 55\n      }, _this);\n    }\n  }, {\n    title: 'Details',\n    prop: 'delete',\n    cell: function cell(row) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/districts/delete/\".concat(row.delete),\n        children: \" Delete \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 57\n      }, _this);\n    }\n  }, {\n    title: 'Details',\n    prop: 'detail',\n    cell: function cell(row) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/districts/read/\".concat(row.detail),\n        children: \" Detail \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 57\n      }, _this);\n    }\n  }];\n\n  var body = function body(dat) {\n    return dat.map(function (data, index) {\n      return {\n        id: index + 1,\n        names: data.names,\n        email: data.email,\n        phone: data.phone,\n        level: data.address,\n        staffs: data.staffs,\n        status: data.status,\n        date: moment(data.updatedAt, \"YYYY-MM-DDTHH:mm:ss.SSSSZ\").format('LLLL'),\n        edit: data._id,\n        delete: data._id,\n        detail: data._id\n      };\n    });\n  };\n\n  React.useEffect(function () {\n    boot();\n  }, [reload]);\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: error ? isError() : loading ? isLoading() : ViewData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Read, \"uAM0VyZwuMAsheaM45OD0FkE4FM=\");\n\n_c = Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/district/View.js"],"names":["React","Row","Col","Card","Button","Aux","Swal","reads","moment","Link","Datatable","isAuthenticated","Read","useState","datas","setDatas","loading","setLoading","error","setError","reload","setReload","isLoading","isError","handleReload","event","preventDefault","boot","Auth","token","data","fire","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","showClass","type","title","ViewData","length","header","body","prop","filterable","sortable","cell","row","edit","delete","detail","dat","map","index","id","names","email","phone","level","address","staffs","status","date","updatedAt","format","_id","useEffect"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC3B,wBAA0BZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAA8Bf,KAAK,CAACa,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAA0BjB,KAAK,CAACa,QAAN,CAAe,KAAf,CAA1B;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAA4BnB,KAAK,CAACa,QAAN,CAAe,KAAf,CAA5B;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAIN,OAAJ,EAAY;AACR,0BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACA,QAAC,IAAD;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAA,uCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,uCACI,QAAC,GAAD;AAAA,yCACI,QAAC,GAAD;AAAA,2CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,uBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ;AAoBH;AACJ,GAvBD;;AAyBA,MAAMO,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAGL,KAAH,EAAS;AACL,0BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACA,QAAC,IAAD;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAA,uCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,uCACI,QAAC,GAAD;AAAA,yCACI,QAAC,GAAD;AAAA,2CACI;AAAA,iGAAmD,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,SAAhB;AAA0B,wBAAA,OAAO,EAAEM,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,uBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ;AAoBH;AACJ,GAvBD;;AAyBA,MAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAG;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GALD;;AAOA,MAAMO,IAAI;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACTV,cAAAA,UAAU,CAAC,IAAD,CAAV;AADS;AAAA,qBAEUN,eAAe,EAFzB;;AAAA;AAEHiB,cAAAA,IAFG;AAAA;AAAA,qBAGUrB,KAAK,CAACqB,IAAI,CAACC,KAAN,CAHf;;AAAA;AAGHC,cAAAA,IAHG;;AAAA,kBAKLA,IALK;AAAA;AAAA;AAAA;;AAMLxB,cAAAA,IAAI,CAACyB,IAAL,CAAU,SAAV,EAAqB,8DAArB,EAAqF,OAArF;AACAd,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,cAAAA,QAAQ,CAAC,IAAD,CAAR;AARK;;AAAA;AAAA,mBAWNW,IAAI,CAACZ,KAXC;AAAA;AAAA;AAAA;;AAYLZ,cAAAA,IAAI,CAACyB,IAAL,CAAU,SAAV,EAAqBD,IAAI,CAACZ,KAA1B,EAAiC,OAAjC;AACAD,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAdK;;AAAA;AAAA,mBAiBNW,IAAI,CAACE,OAjBC;AAAA;AAAA;AAAA;;AAkBLf,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,cAAAA,QAAQ,CAAC,KAAD,CAAR;AACAJ,cAAAA,QAAQ,CAACe,IAAI,CAACA,IAAN,CAAR,CApBK,CAqBL;;AACIG,cAAAA,KAtBC,GAsBO3B,IAAI,CAAC4B,KAAL,CAAW;AACnBC,gBAAAA,KAAK,EAAE,IADY;AAEnBC,gBAAAA,gBAAgB,EAAE,IAFC;AAGnBC,gBAAAA,QAAQ,EAAE,SAHS;AAInBC,gBAAAA,iBAAiB,EAAE,KAJA;AAKnBC,gBAAAA,KAAK,EAAE;AALY,eAAX,CAtBP;AAAA,+CA8BEN,KAAK,CAACF,IAAN,CAAW;AACdS,gBAAAA,SAAS,EAAE,IADG;AAEdC,gBAAAA,IAAI,EAAE,SAFQ;AAGdC,gBAAAA,KAAK,EAAEZ,IAAI,CAACE;AAHE,eAAX,CA9BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJL,IAAI;AAAA;AAAA;AAAA,KAAV;;AAsCA,MAAMgB,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAClB,wBACE,QAAC,GAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA,eAFF,EAII7B,KAAK,CAAC8B,MAAN,GAAe,CAAf,gBACA,QAAC,SAAD;AACE,QAAA,YAAY,EAAEC,MADhB;AAEE,QAAA,SAAS,EAAEC,IAAI,CAAChC,KAAD,CAFjB;AAGE,QAAA,WAAW,EAAE,EAHf;AAIE,QAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,GAA5B;AAJrB;AAAA;AAAA;AAAA;AAAA,eADA,gBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXN;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAgBD,GAjBH;;AAkBE,MAAM+B,MAAM,GAAG,CACb;AAAEH,IAAAA,KAAK,EAAE,IAAT;AAAeK,IAAAA,IAAI,EAAE,IAArB;AAA2BC,IAAAA,UAAU,EAAE,IAAvC;AAA6CC,IAAAA,QAAQ,EAAE;AAAvD,GADa,EAEb;AAAEP,IAAAA,KAAK,EAAE,YAAT;AAAuBK,IAAAA,IAAI,EAAE,OAA7B;AAAsCC,IAAAA,UAAU,EAAE,IAAlD;AAAwDC,IAAAA,QAAQ,EAAE;AAAlE,GAFa,EAGb;AAAEP,IAAAA,KAAK,EAAE,OAAT;AAAkBK,IAAAA,IAAI,EAAE,OAAxB;AAAiCC,IAAAA,UAAU,EAAE,IAA7C;AAAmDC,IAAAA,QAAQ,EAAE;AAA7D,GAHa,EAIb;AAAEP,IAAAA,KAAK,EAAE,cAAT;AAAyBK,IAAAA,IAAI,EAAE,OAA/B;AAAwCC,IAAAA,UAAU,EAAE,IAApD;AAA0DC,IAAAA,QAAQ,EAAE;AAApE,GAJa,EAKb;AAAEP,IAAAA,KAAK,EAAE,SAAT;AAAoBK,IAAAA,IAAI,EAAE,OAA1B;AAAmCC,IAAAA,UAAU,EAAE,IAA/C;AAAqDC,IAAAA,QAAQ,EAAE;AAA/D,GALa,EAMb;AAAEP,IAAAA,KAAK,EAAE,QAAT;AAAmBK,IAAAA,IAAI,EAAE,QAAzB;AAAmCC,IAAAA,UAAU,EAAE,IAA/C;AAAqDC,IAAAA,QAAQ,EAAE;AAA/D,GANa,EAOb;AAAEP,IAAAA,KAAK,EAAE,eAAT;AAA0BK,IAAAA,IAAI,EAAE,QAAhC;AAA0CC,IAAAA,UAAU,EAAE,IAAtD;AAA4DC,IAAAA,QAAQ,EAAE;AAAtE,GAPa,EAQb;AAAEP,IAAAA,KAAK,EAAE,cAAT;AAAyBK,IAAAA,IAAI,EAAE,MAA/B;AAAuCC,IAAAA,UAAU,EAAE,IAAnD;AAAyDC,IAAAA,QAAQ,EAAE;AAAnE,GARa,EASb;AAAEP,IAAAA,KAAK,EAAE,SAAT;AAAoBK,IAAAA,IAAI,EAAE,MAA1B;AAAkCG,IAAAA,IAAI,EAAE,cAAAC,GAAG;AAAA,0BAAG,QAAC,IAAD;AAAM,QAAA,EAAE,kCAA2BA,GAAG,CAACC,IAA/B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH;AAAA;AAA3C,GATa,EAUb;AAAEV,IAAAA,KAAK,EAAE,SAAT;AAAoBK,IAAAA,IAAI,EAAE,QAA1B;AAAoCG,IAAAA,IAAI,EAAE,cAAAC,GAAG;AAAA,0BAAG,QAAC,IAAD;AAAM,QAAA,EAAE,oCAA6BA,GAAG,CAACE,MAAjC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH;AAAA;AAA7C,GAVa,EAWb;AAAEX,IAAAA,KAAK,EAAE,SAAT;AAAoBK,IAAAA,IAAI,EAAE,QAA1B;AAAoCG,IAAAA,IAAI,EAAE,cAAAC,GAAG;AAAA,0BAAG,QAAC,IAAD;AAAM,QAAA,EAAE,kCAA2BA,GAAG,CAACG,MAA/B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH;AAAA;AAA7C,GAXa,CAAf;;AAcA,MAAMR,IAAI,GAAG,SAAPA,IAAO,CAACS,GAAD,EAAS;AACpB,WAAOA,GAAG,CAACC,GAAJ,CAAQ,UAAC1B,IAAD,EAAO2B,KAAP,EAAe;AAC5B,aAAM;AACJC,QAAAA,EAAE,EAACD,KAAK,GAAE,CADN;AAEJE,QAAAA,KAAK,EAAC7B,IAAI,CAAC6B,KAFP;AAGJC,QAAAA,KAAK,EAAC9B,IAAI,CAAC8B,KAHP;AAIJC,QAAAA,KAAK,EAAC/B,IAAI,CAAC+B,KAJP;AAKJC,QAAAA,KAAK,EAAChC,IAAI,CAACiC,OALP;AAMJC,QAAAA,MAAM,EAAClC,IAAI,CAACkC,MANR;AAOJC,QAAAA,MAAM,EAACnC,IAAI,CAACmC,MAPR;AAQJC,QAAAA,IAAI,EAAE1D,MAAM,CAACsB,IAAI,CAACqC,SAAN,EAAgB,2BAAhB,CAAN,CAAmDC,MAAnD,CAA0D,MAA1D,CARF;AASJhB,QAAAA,IAAI,EAACtB,IAAI,CAACuC,GATN;AAUJhB,QAAAA,MAAM,EAACvB,IAAI,CAACuC,GAVR;AAWJf,QAAAA,MAAM,EAACxB,IAAI,CAACuC;AAXR,OAAN;AAaD,KAdM,CAAP;AAeD,GAhBD;;AAkBFrE,EAAAA,KAAK,CAACsE,SAAN,CAAgB,YAAM;AAClB3C,IAAAA,IAAI;AACP,GAFD,EAEE,CAACP,MAAD,CAFF;AAIA,sBACI,QAAC,GAAD;AAAA,cACKF,KAAK,GAAGK,OAAO,EAAV,GAAeP,OAAO,GAAIM,SAAS,EAAb,GAAiBqB,QAAQ;AADzD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhKuB/B,I;;KAAAA,I","sourcesContent":["\r\nimport React from 'react';\r\nimport {Row, Col, Card, Button } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport { reads } from './api';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport Datatable from 'react-bs-datatable'; \r\nimport { isAuthenticated } from '../../Auth/admin/api';\r\n\r\n\r\nexport default function Read() {\r\n    const [datas, setDatas] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(false)\r\n    const [reload, setReload] = React.useState(false)\r\n    \r\n    const isLoading = () => {\r\n        if (loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Wait loading data ...</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                    <h1>District List is loading </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Error in Loading Data.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Districts data Failed to Load, you can refresh <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setError(false)\r\n        setLoading(true)\r\n        setReload(!reload) \r\n    }\r\n\r\n    const boot = async () => {\r\n        setLoading(true)\r\n        const Auth = await isAuthenticated()\r\n        const data = await reads(Auth.token);\r\n                \r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            setLoading(false)\r\n            setError(true)\r\n            return \r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            setLoading(false)\r\n            setError(true)\r\n            return\r\n        }\r\n        if(data.message){\r\n            setLoading(false)\r\n            setError(false)\r\n            setDatas(data.data)\r\n            //return Swal.fire('Successful....', data.message, 'success')\r\n            let Toast = Swal.mixin({\r\n                toast: true,\r\n                timerProgressBar: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000\r\n            });\r\n    \r\n            return Toast.fire({\r\n                showClass: true,\r\n                type: 'success',\r\n                title: data.message\r\n            })\r\n        }\r\n    }\r\n\r\n    const ViewData = () =>{\r\n        return(\r\n          <Aux>\r\n            <h1>Manage District data</h1>\r\n            <hr />\r\n            {\r\n              datas.length > 0 ?  \r\n              <Datatable \r\n                tableHeaders={header} \r\n                tableBody={body(datas)} \r\n                rowsPerPage={10}\r\n                rowsPerPageOption={[5, 10, 15, 20, 30, 40, 50, 100]}\r\n              />\r\n              : <h1>No Data </h1>\r\n            }\r\n          </Aux>\r\n        )\r\n      }\r\n      const header = [\r\n        { title: 'SN', prop: 'id', filterable: true, sortable: true, },\r\n        { title: 'Full Names', prop: 'names', filterable: true, sortable: true, },\r\n        { title: 'Email', prop: 'email', filterable: true, sortable: true, },\r\n        { title: 'Phone Number', prop: 'phone', filterable: true, sortable: true },\r\n        { title: 'Address', prop: 'level', filterable: true, sortable: true },\r\n        { title: 'Status', prop: 'status', filterable: true, sortable: true },\r\n        { title: 'District Head', prop: 'staffs', filterable: true, sortable: true },\r\n        { title: 'Last Update ', prop: 'date', filterable: true, sortable: true },\r\n        { title: 'Details', prop: 'edit', cell: row =><Link to={`/admin/districts/edit/${row.edit}`} > Edit</Link>},\r\n        { title: 'Details', prop: 'delete', cell: row =><Link to={`/admin/districts/delete/${row.delete}`} > Delete </Link>},\r\n        { title: 'Details', prop: 'detail', cell: row =><Link to={`/admin/districts/read/${row.detail}`} > Detail </Link>},\r\n      ];\r\n    \r\n      const body = (dat) => {\r\n        return dat.map((data, index)=>{\r\n          return{\r\n            id:index +1,\r\n            names:data.names,\r\n            email:data.email,\r\n            phone:data.phone,\r\n            level:data.address,\r\n            staffs:data.staffs,\r\n            status:data.status,\r\n            date :moment(data.updatedAt,\"YYYY-MM-DDTHH:mm:ss.SSSSZ\").format('LLLL'),\r\n            edit:data._id,\r\n            delete:data._id,\r\n            detail:data._id,\r\n          }\r\n        })\r\n      };\r\n\r\n    React.useEffect(() => {\r\n        boot();\r\n    },[reload])\r\n\r\n    return (\r\n        <Aux>\r\n            {error ? isError() : loading ?  isLoading() :ViewData()}\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}