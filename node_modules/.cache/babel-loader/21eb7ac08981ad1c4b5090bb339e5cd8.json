{"ast":null,"code":"import _classCallCheck from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\Demo\\\\UIElements\\\\Basic\\\\Button.js\";\nimport React from 'react';\nimport { Row, Col, Button, OverlayTrigger, Tooltip, ButtonToolbar, Dropdown, DropdownButton, SplitButton } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Card from \"../../../App/components/MainCard\";\nimport UcFirst from \"../../../App/components/UcFirst\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar BasicButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(BasicButton, _React$Component);\n\n  var _super = _createSuper(BasicButton);\n\n  function BasicButton() {\n    _classCallCheck(this, BasicButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BasicButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var buttonVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n      var buttonOptions = [{\n        variant: 'primary',\n        icon: 'feather icon-thumbs-up'\n      }, {\n        variant: 'secondary',\n        icon: 'feather icon-camera'\n      }, {\n        variant: 'success',\n        icon: 'feather icon-check-circle'\n      }, {\n        variant: 'danger',\n        icon: 'feather icon-slash'\n      }, {\n        variant: 'warning',\n        icon: 'feather icon-alert-triangle'\n      }, {\n        variant: 'info',\n        icon: 'feather icon-info'\n      }];\n      var basicButtons = buttonVariants.map(function (variant, idx) {\n        return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n          overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n            children: variant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 48\n          }, _this),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: variant,\n            children: /*#__PURE__*/_jsxDEV(UcFirst, {\n              text: variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, _this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this);\n      });\n      var outlineButtons = buttonVariants.map(function (variant, idx) {\n        return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n          overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n            children: 'outline-' + variant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 48\n          }, _this),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: 'outline-' + variant,\n            children: /*#__PURE__*/_jsxDEV(UcFirst, {\n              text: variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 54\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, _this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, _this);\n      });\n      var squareButtons = buttonVariants.map(function (variant, idx) {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-square\",\n          variant: variant,\n          children: /*#__PURE__*/_jsxDEV(UcFirst, {\n            text: variant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 127\n          }, _this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 68\n        }, _this);\n      });\n      var basicDropdownButton = buttonOptions.map(function (button) {\n        var title = /*#__PURE__*/_jsxDEV(UcFirst, {\n          text: button.variant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 31\n        }, _this);\n\n        return /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: title,\n          variant: button.variant,\n          id: \"dropdown-variants-\".concat(button.variant),\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"1\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"2\",\n            children: \"Another action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"3\",\n            children: \"Something else hear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, _this)]\n        }, button.variant, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, _this);\n      });\n      var splitDropdownButton = buttonOptions.map(function (button) {\n        var title = /*#__PURE__*/_jsxDEV(UcFirst, {\n          text: button.variant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }, _this);\n\n        return /*#__PURE__*/_jsxDEV(SplitButton, {\n          title: title,\n          variant: button.variant,\n          id: \"dropdown-split-variants-\".concat(button.variant),\n          className: \"mr-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"1\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"2\",\n            children: \"Another action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"3\",\n            children: \"Something else hear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"4\",\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, _this)]\n        }, button.variant, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, _this);\n      });\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              title: \"Default\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"variant=\\\"*\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 36\n                }, this), \" props in component \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"Button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 80\n                }, this), \" to get various button\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this), basicButtons, /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  children: \"link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 54\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  children: \"Link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Outline\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"variant=\\\"outline-*\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 36\n                }, this), \" props in component \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"Button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 88\n                }, this), \" to get various outline button\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), outlineButtons]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Square Button\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"className=\\\"btn-square\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 36\n                }, this), \" props in component \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"Button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 91\n                }, this), \" to get square button\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), squareButtons]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              title: \"Basic Dropdown Button\",\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: basicDropdownButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Split Dropdown Button\",\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: splitDropdownButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return BasicButton;\n}(React.Component);\n\nexport default BasicButton;","map":{"version":3,"sources":["C:/Users/VP/web/src/Demo/UIElements/Basic/Button.js"],"names":["React","Row","Col","Button","OverlayTrigger","Tooltip","ButtonToolbar","Dropdown","DropdownButton","SplitButton","Aux","Card","UcFirst","BasicButton","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","outlineButtons","squareButtons","basicDropdownButton","button","title","splitDropdownButton","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass BasicButton extends React.Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonOptions = [\r\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n            {variant: 'secondary', icon:'feather icon-camera'},\r\n            {variant: 'success', icon:'feather icon-check-circle'},\r\n            {variant: 'danger', icon:'feather icon-slash'},\r\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n            {variant: 'info', icon:'feather icon-info'}\r\n        ];\r\n\r\n        const basicButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n                <Button variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const outlineButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\r\n\r\n\r\n        const basicDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\r\n                            {squareButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n"]},"metadata":{},"sourceType":"module"}