{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{Row,Col,Card,Form,Button}from'react-bootstrap';import Aux from\"../../../hoc/_Aux\";import Swal from'sweetalert2';import{Redirect}from'react-router-dom';import{create}from'./api';export default function Create(){var _React$useState=React.useState({code:\"\",names:\"\",phone:\"\",address:\"\",email:\"\",status:true,password:\"\",password2:\"\",loading:false,redirectToPage:false}),_React$useState2=_slicedToArray(_React$useState,2),values=_React$useState2[0],setValues=_React$useState2[1];var code=values.code,names=values.names,phone=values.phone,email=values.email,password=values.password,password2=values.password2,address=values.address,status=values.status,loading=values.loading,redirectToPage=values.redirectToPage;var handleChange=function handleChange(name){return function(event){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,event.target.value)));};};var submit=function submit(event){event.preventDefault();setValues(_objectSpread(_objectSpread({},values),{},{loading:true}));if(code===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loading:false}));return Swal.fire('Oops...','District code is required','error');}if(names===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loading:false}));return Swal.fire('Oops...','District name is required','error');}if(phone===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loading:false}));return Swal.fire('Oops...','District Phone number is required','error');}if(address===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loading:false}));return Swal.fire('Oops...','District address is required','error');}if(email===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loading:false}));return Swal.fire('Oops...','District email is required','error');}if(password===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loading:false}));return Swal.fire('Oops...','Password can not be an empty value','error');}if(password!==password2){setValues(_objectSpread(_objectSpread({},values),{},{loading:false}));return Swal.fire('Oops...','Password must match each other','error');}handleCreate();};var handleCreate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user,data,Toast;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user={code:code,names:names,phone:phone,email:email,password:password,password2:password2,address:address,status:status};_context.next=3;return create(user);case 3:data=_context.sent;console.log(data);if(data){_context.next=8;break;}Swal.fire('Oops...','internet server error, Please, check your network connection','error');return _context.abrupt(\"return\",setValues(_objectSpread(_objectSpread({},values),{},{loading:false})));case 8:if(!data.error){_context.next=11;break;}Swal.fire('Oops...',data.error,'error');return _context.abrupt(\"return\",setValues(_objectSpread(_objectSpread({},values),{},{loading:false})));case 11:if(!data.message){_context.next=16;break;}Swal.fire('Saved...',data.message,'success');setValues(_objectSpread(_objectSpread({},values),{},{loading:false,redirectToPage:true}));Toast=Swal.mixin({toast:true,timerProgressBar:true,position:'top-end',showConfirmButton:false,timer:3000});return _context.abrupt(\"return\",Toast.fire({animation:true,type:'success',title:'Request is successful'}));case 16:case\"end\":return _context.stop();}}},_callee);}));return function handleCreate(){return _ref.apply(this,arguments);};}();var redirectUser=function redirectUser(){if(redirectToPage){return/*#__PURE__*/React.createElement(Redirect,{to:\"/admin/districts/create\"});}};React.useEffect(function(){var getDistrictCode=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var dcode;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://call the endpoint for code \ndcode='DS001';setValues(function(v){return _objectSpread(_objectSpread({},v),{},{code:dcode});});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function getDistrictCode(){return _ref2.apply(this,arguments);};}();getDistrictCode();/*\r\n        return () => {\r\n            //cleanup\r\n        }\r\n        */},[]);return/*#__PURE__*/React.createElement(Aux,null,redirectUser(),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h3\"},\"Add New District\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"District Code\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"district code\",onChange:handleChange(\"code\"),value:code})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"District Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"district name\",onChange:handleChange(\"names\"),value:names})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Phone \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"district phone\",onChange:handleChange(\"phone\"),value:phone})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\",onChange:handleChange(\"password\"),value:password})),loading?\"loading ...\":/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:submit},\"Create ..\"))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Address \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"building/house name, city\",onChange:handleChange(\"address\"),value:address})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Officer-in- charge\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Education District ID\"})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"exampleForm.ControlInput1\"},/*#__PURE__*/React.createElement(Form.Label,null,\"email \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"email\",onChange:handleChange(\"email\"),value:email})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password Confirmation\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Password Confirmation\",onChange:handleChange(\"password2\"),value:password2})))))))));}","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/district/Create.js"],"names":["React","Row","Col","Card","Form","Button","Aux","Swal","Redirect","create","Create","useState","code","names","phone","address","email","status","password","password2","loading","redirectToPage","values","setValues","handleChange","name","event","target","value","submit","preventDefault","fire","handleCreate","user","data","console","log","error","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser","useEffect","getDistrictCode","dcode","v"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { create } from './api';\r\n\r\n\r\nexport default function Create() {\r\n\r\n    const [values, setValues] = React.useState({\r\n        code:\"\",\r\n        names:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        status:true,\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        \r\n    })\r\n    const {code, names, phone, email, password, password2, address, status, loading, redirectToPage} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:true})\r\n        if(code===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District code is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District name is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n        if(password===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n\r\n        handleCreate();\r\n    }\r\n\r\n    const handleCreate =async ()=>{\r\n        const user = {code, names, phone, email, password, password2, address, status}\r\n        const data = await create(user);\r\n        console.log(data)\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n            setValues({...values, loading:false, redirectToPage:true});\r\n\r\n            let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n           });\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/districts/create\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const getDistrictCode = async () =>{\r\n            //call the endpoint for code \r\n            let dcode = 'DS001'\r\n            setValues(v=>({...v, code:dcode}))\r\n        }\r\n        getDistrictCode();\r\n        /*\r\n        return () => {\r\n            //cleanup\r\n        }\r\n        */\r\n    }, [])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Add New District</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district code\" onChange={handleChange(\"code\")} value={code} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district name\" onChange={handleChange(\"names\")} value={names} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                            {\r\n                                                loading ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Create ..</Button>\r\n                                            }\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"building/house name, city\" onChange={handleChange(\"address\")} value={address} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Officer-in- charge</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Education District ID\" />\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label>Password Confirmation</Form.Label>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}