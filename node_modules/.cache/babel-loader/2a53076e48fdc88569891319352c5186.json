{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\classes\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { read, edit } from './api';\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from '../../Auth/admin/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  var _this = this;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState({\n    classCode: \"\",\n    names: \"\",\n    loading: false,\n    redirectToPage: false,\n    error: false,\n    reload: false,\n    loadingBtn: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var classCode = values.classCode,\n      names = values.names,\n      error = values.error,\n      loading = values.loading,\n      reload = values.reload,\n      redirectToPage = values.redirectToPage,\n      loadingBtn = values.loadingBtn;\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loadingBtn: true\n    }));\n\n    if (classCode === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'class code  is required', 'error');\n    }\n\n    if (names === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Class Name is required', 'error');\n    }\n\n    handleUpdate();\n  };\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, Auth, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                classCode: classCode,\n                names: names\n              };\n              Auth = isAuthenticated();\n              _context.next = 4;\n              return edit(id, user, Auth.token);\n\n            case 4:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 8;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 8:\n              if (!data.error) {\n                _context.next = 11;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 11:\n              if (!data.message) {\n                _context.next = 16;\n                break;\n              }\n\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              Toast.fire({\n                animation: true,\n                type: 'success',\n                title: data.message\n              });\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false,\n                redirectToPage: true\n              }));\n              return _context.abrupt(\"return\", Swal.fire('saved...', data.message, 'success'));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/admin/class/read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, _this);\n    }\n  };\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Wait !!!.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Requesting for Class  data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Error in reading this user .\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: [\"Class data failed to read, Try again \", /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"primary\",\n                        onClick: handleReload,\n                        children: \"Reload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 82\n                      }, _this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false,\n      error: false,\n      reload: !reload\n    }));\n  };\n\n  React.useEffect(function () {\n    var bootstrap = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var Auth, data, Toast;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                Auth = isAuthenticated();\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: true\n                  });\n                });\n                _context2.next = 4;\n                return read(id, Auth.token);\n\n              case 4:\n                data = _context2.sent;\n\n                if (data) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context2.abrupt(\"return\");\n\n              case 9:\n                if (!data.error) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                Swal.fire('Oops...', data.error, 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context2.abrupt(\"return\");\n\n              case 13:\n                if (!data.message) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: false,\n                    classCode: data.data.classCode,\n                    names: data.data.names\n                  });\n                });\n                Toast = Swal.mixin({\n                  toast: true,\n                  timerProgressBar: true,\n                  position: 'top-end',\n                  showConfirmButton: false,\n                  timer: 3000\n                });\n                return _context2.abrupt(\"return\", Toast.fire({\n                  showClass: true,\n                  type: 'success',\n                  title: data.message\n                }));\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function bootstrap() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    bootstrap();\n  }, [reload, id]);\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [redirectUser(), isError(), loading ? isLoading() : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h3\",\n              children: \"Update the Class data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicEmail\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Class name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"First name\",\n                      onChange: handleChange(\"names\"),\n                      value: names\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicEmail\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Class Code\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Middle name\",\n                      onChange: handleChange(\"classCode\"),\n                      value: classCode\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 49\n                  }, this), loadingBtn ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    disabled: true,\n                    children: \"wait ......\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 66\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: submit,\n                    children: \"Update Class Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 134\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Edit, \"+ofTRbhe1uXIu4mum6DfyHpLqKo=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/classes/Edit.js"],"names":["React","Row","Col","Card","Form","Button","Aux","Swal","read","edit","useParams","Redirect","isAuthenticated","Edit","id","useState","classCode","names","loading","redirectToPage","error","reload","loadingBtn","values","setValues","handleChange","name","event","target","value","submit","preventDefault","fire","handleUpdate","user","Auth","token","data","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser","isLoading","isError","handleReload","useEffect","bootstrap","v","showClass"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {read, edit } from './api';\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from '../../Auth/admin/api';\r\n\r\nexport default function Edit() {\r\n    let { id } = useParams();\r\n    const [values, setValues] = React.useState({\r\n        classCode:\"\",\r\n        names:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        error:false,\r\n        reload:false,\r\n        loadingBtn:false,\r\n    })\r\n    const {classCode, names, error, loading, reload, redirectToPage, loadingBtn } = values\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value});\r\n    }\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loadingBtn:true})\r\n        if(classCode===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'class code  is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Class Name is required', 'error');\r\n        }\r\n        handleUpdate();\r\n    }\r\n\r\n    const handleUpdate =async ()=>{\r\n        const user = {classCode, names}\r\n        const Auth = isAuthenticated();\r\n        const data = await edit(id, user, Auth.token);\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.message){\r\n            let Toast = Swal.mixin({\r\n                toast: true,\r\n                timerProgressBar: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000\r\n            });\r\n            Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: data.message\r\n            })\r\n           setValues({...values, loadingBtn:false, redirectToPage:true})\r\n           return Swal.fire('saved...', data.message, 'success')\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/class/read\" />\r\n        }\r\n    };\r\n\r\n    const isLoading= () => {\r\n        if(loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Wait !!!.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Requesting for Class  data</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Error in reading this user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Class data failed to read, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:false, error:false, reload:!reload})\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const bootstrap = async ()=>{\r\n            const Auth = isAuthenticated();\r\n            setValues(v => ({...v, loading:true}))\r\n            const data = await read(id, Auth.token);\r\n            if(!data){\r\n                    Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\r\n                    setValues(v => ({...v, loading:false, error:true}))  \r\n                    return  \r\n            }\r\n            if(data.error){\r\n                    Swal.fire('Oops...', data.error, 'error')\r\n                    setValues(v => ({...v, loading:false, error:true})) \r\n                    return \r\n            }\r\n            if(data.message){\r\n                    setValues(v => ({...v, loading:false, error:false, classCode:data.data.classCode, names:data.data.names}))\r\n                    let Toast = Swal.mixin({\r\n                        toast: true,\r\n                        timerProgressBar: true,\r\n                        position: 'top-end',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n                    return Toast.fire({\r\n                        showClass: true,\r\n                        type: 'success',\r\n                        title: data.message\r\n                    })\r\n            } \r\n        }\r\n        bootstrap()\r\n    },[reload, id])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            {isError()}\r\n            {loading ? isLoading() :\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Update the Class data</Card.Title>\r\n                            </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Class name</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"First name\" onChange={handleChange(\"names\")} value={names} />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Class Code</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"Middle name\" onChange={handleChange(\"classCode\")} value={classCode} />\r\n                                                </Form.Group>\r\n\r\n                                                {\r\n                                                    loadingBtn ? <Button variant=\"outline-secondary\" disabled>wait ......</Button> : <Button variant=\"primary\" onClick={submit}  >Update Class Data</Button>\r\n                                                }\r\n                                            </Form>\r\n                                        </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}