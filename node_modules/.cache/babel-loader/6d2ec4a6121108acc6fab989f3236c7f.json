{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\district\\\\Edit.js\";\nimport React from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { edit, read } from './api';\nexport default function Edit() {\n  var _this = this;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState({\n    code: \"\",\n    names: \"\",\n    phone: \"\",\n    address: \"\",\n    email: \"\",\n    status: true,\n    password: \"\",\n    password2: \"\",\n    loading: false,\n    loadingBtn: false,\n    redirectToPage: false,\n    error: false,\n    reload: false,\n    token: '00033'\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var code = values.code,\n      names = values.names,\n      phone = values.phone,\n      email = values.email,\n      password = values.password,\n      password2 = values.password2,\n      address = values.address,\n      status = values.status,\n      error = values.error,\n      loading = values.loading,\n      loadingBtn = values.loadingBtn,\n      reload = values.reload,\n      redirectToPage = values.redirectToPage,\n      token = values.token;\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, \"Wait !!!.\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }\n      }, \"Requesting for District  data\"))))))));\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, \"Error in reading this user .\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }, \"failed to read district data, Try again \", /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: handleReload,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 85\n        }\n      }, \"Reload\"), \" \"))))))));\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false,\n      error: false,\n      reload: !reload\n    }));\n  };\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loadingBtn: true\n    }));\n\n    if (code === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District code is required', 'error');\n    }\n\n    if (names === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District name is required', 'error');\n    }\n\n    if (phone === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District Phone number is required', 'error');\n    }\n\n    if (address === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District address is required', 'error');\n    }\n\n    if (email === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District email is required', 'error');\n    }\n\n    if (password === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\n    }\n\n    if (password !== password2) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Password must match each other', 'error');\n    }\n\n    handleUpdate();\n  };\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                code: code,\n                names: names,\n                phone: phone,\n                email: email,\n                password: password,\n                password2: password2,\n                address: address,\n                status: status\n              };\n              _context.next = 3;\n              return edit(id, user, token);\n\n            case 3:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 7;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 7:\n              if (!data.error) {\n                _context.next = 10;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 10:\n              if (!data.message) {\n                _context.next = 15;\n                break;\n              }\n\n              Swal.fire('Saved...', data.message, 'success');\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false,\n                redirectToPage: true\n              }));\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              return _context.abrupt(\"return\", Toast.fire({\n                animation: true,\n                type: 'success',\n                title: 'Request is successful'\n              }));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/admin/districts/read\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  React.useEffect(function () {\n    var ignore = false;\n\n    var bootstrap = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var data, _data$data, _code, _names, _email, _phone, _address;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: true\n                  });\n                });\n                _context2.next = 3;\n                return read(id);\n\n              case 3:\n                data = _context2.sent;\n\n                if (ignore) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                if (data) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context2.abrupt(\"return\");\n\n              case 9:\n                if (!data.error) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                Swal.fire('Oops...', data.error, 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context2.abrupt(\"return\");\n\n              case 13:\n                if (!data.message) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                _data$data = data.data, _code = _data$data.code, _names = _data$data.names, _email = _data$data.email, _phone = _data$data.phone, _address = _data$data.address;\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: false,\n                    code: _code,\n                    phone: _phone,\n                    email: _email,\n                    names: _names,\n                    address: _address\n                  });\n                });\n                return _context2.abrupt(\"return\", Swal.fire('Great', data.message, 'success'));\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function bootstrap() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    bootstrap();\n    return function () {\n      ignore = true;\n    };\n  }, [reload, id]);\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, redirectUser(), isError(), loading ? isLoading() : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, \"Update the District\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 49\n    }\n  }, \"District Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district code\",\n    onChange: handleChange(\"code\"),\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 49\n    }\n  }, \"District Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district name\",\n    onChange: handleChange(\"names\"),\n    value: names,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 49\n    }\n  }, \"Phone \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district phone\",\n    onChange: handleChange(\"phone\"),\n    value: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 49\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange(\"password\"),\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 49\n    }\n  })), loadingBtn ? \"loading ...\" : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 78\n    }\n  }, \"Update..\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 49\n    }\n  }, \"Address \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"building/house name, city\",\n    onChange: handleChange(\"address\"),\n    value: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 49\n    }\n  }, \"Officer-in- charge\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Education District ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  }, \"email \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"email\",\n    onChange: handleChange(\"email\"),\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 45\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password Confirmation\",\n    onChange: handleChange(\"password2\"),\n    value: password2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 45\n    }\n  })))))))));\n}","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/district/Edit.js"],"names":["React","Row","Col","Card","Form","Button","Aux","Swal","useParams","Redirect","edit","read","Edit","id","useState","code","names","phone","address","email","status","password","password2","loading","loadingBtn","redirectToPage","error","reload","token","values","setValues","handleChange","name","event","target","value","isLoading","isError","handleReload","preventDefault","submit","fire","handleUpdate","user","data","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser","useEffect","ignore","bootstrap","v"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { edit, read } from './api';\r\n\r\n\r\nexport default function Edit() {\r\n    let { id } = useParams();\r\n\r\n    const [values, setValues] = React.useState({\r\n        code:\"\",\r\n        names:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        status:true,\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        loadingBtn:false,\r\n        redirectToPage:false,\r\n        error:false,\r\n        reload:false,\r\n        token:'00033'\r\n        \r\n    })\r\n\r\n    const {code, names, phone, email, password, password2, address, status, error, loading, loadingBtn, reload, redirectToPage, token} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const isLoading= () => {\r\n        if(loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Wait !!!.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Requesting for District  data</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Error in reading this user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>failed to read district data, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:false, error:false, reload:!reload})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loadingBtn:true})\r\n        if(code===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District code is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District name is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n        if(password===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n\r\n        handleUpdate();\r\n    }\r\n\r\n    const handleUpdate =async ()=>{\r\n        const user = {code, names, phone, email, password, password2, address, status}\r\n        const data = await edit(id, user, token);\r\n        //console.log(data)\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n            setValues({...values, loadingBtn:false, redirectToPage:true});\r\n\r\n            let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n           });\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/districts/read\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let ignore = false;\r\n        const bootstrap = async ()=>{\r\n            setValues(v => ({...v, loading:true}))\r\n            const data = await read(id);\r\n            //console.log({data, id})\r\n            if (!ignore){\r\n                if(!data){\r\n                    Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\r\n                    setValues(v => ({...v, loading:false, error:true}))  \r\n                    return  \r\n                }\r\n                if(data.error){\r\n                    Swal.fire('Oops...', data.error, 'error')\r\n                    setValues(v => ({...v, loading:false, error:true})) \r\n                    return \r\n                }\r\n        \r\n                if(data.message){\r\n                    const {code, names, email, phone,address } = data.data;\r\n                    setValues(v => ({...v, loading:false, error:false, code, phone,email,names, address }))\r\n                    return Swal.fire('Great', data.message, 'success');\r\n                } \r\n            }\r\n        }\r\n        bootstrap()\r\n        return () => { ignore = true };\r\n    },[reload, id])\r\n\r\n    return (\r\n        <Aux>\r\n        {redirectUser()}\r\n        {isError()}\r\n        {\r\n            loading ? isLoading() :\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Update the District</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district code\" onChange={handleChange(\"code\")} value={code} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district name\" onChange={handleChange(\"names\")} value={names} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                            {\r\n                                                loadingBtn ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Update..</Button>\r\n                                            }\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"building/house name, city\" onChange={handleChange(\"address\")} value={address} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Officer-in- charge</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Education District ID\" />\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label>Password Confirmation</Form.Label>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n            </Row>\r\n        } \r\n        </Aux>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}