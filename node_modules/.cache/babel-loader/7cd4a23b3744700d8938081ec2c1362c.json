{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\district\\\\Create.js\";\nimport React from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { Redirect } from 'react-router-dom';\nimport { create } from './api';\nimport { isAuthenticated } from '../../Auth/admin/api';\nimport { Link } from 'react-router-dom';\nexport default function Create() {\n  var _this = this;\n\n  var _React$useState = React.useState({\n    //code:\"\",\n    names: \"\",\n    phone: \"\",\n    address: \"\",\n    email: \"\",\n    status: true,\n    password: \"\",\n    password2: \"\",\n    loading: false,\n    redirectToPage: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var names = values.names,\n      phone = values.phone,\n      email = values.email,\n      password = values.password,\n      password2 = values.password2,\n      address = values.address,\n      status = values.status,\n      loading = values.loading,\n      redirectToPage = values.redirectToPage;\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n\n    if (names === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District name is required', 'error');\n    }\n\n    if (phone === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District Phone number is required', 'error');\n    }\n\n    if (address === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District address is required', 'error');\n    }\n\n    if (email === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District email is required', 'error');\n    }\n\n    if (password === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\n    }\n\n    if (password !== password2) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'Password must match each other', 'error');\n    }\n\n    handleCreate();\n  };\n\n  var handleCreate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, Auth, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                names: names,\n                phone: phone,\n                email: email,\n                password: password,\n                password2: password2,\n                address: address,\n                status: status\n              };\n              _context.next = 3;\n              return isAuthenticated();\n\n            case 3:\n              Auth = _context.sent;\n              _context.next = 6;\n              return create(user, Auth.token);\n\n            case 6:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 10;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false\n              })));\n\n            case 10:\n              if (!data.error) {\n                _context.next = 13;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false\n              })));\n\n            case 13:\n              if (!data.message) {\n                _context.next = 18;\n                break;\n              }\n\n              Swal.fire('Saved...', data.message, 'success');\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: false,\n                redirectToPage: true\n              }));\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              return _context.abrupt(\"return\", Toast.fire({\n                animation: true,\n                type: 'success',\n                title: 'Request is successful'\n              }));\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCreate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/admin/districts/create\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, redirectUser(), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/districts/read\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }, \" Read Districts \"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, \"Add New District\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 49\n    }\n  }, \"District Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district name\",\n    onChange: handleChange(\"names\"),\n    value: names,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 49\n    }\n  }, \"Phone \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district phone\",\n    onChange: handleChange(\"phone\"),\n    value: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 49\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange(\"password\"),\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 49\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password Confirmation\",\n    onChange: handleChange(\"password2\"),\n    value: password2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 49\n    }\n  })), loading ? \"loading ...\" : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 75\n    }\n  }, \"Create ..\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 49\n    }\n  }, \"Address \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"building/house name, city\",\n    onChange: handleChange(\"address\"),\n    value: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 49\n    }\n  }, \"Officer-in- charge\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Education District ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }, \"email \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"email\",\n    onChange: handleChange(\"email\"),\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  })))))))));\n}","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/district/Create.js"],"names":["React","Row","Col","Card","Form","Button","Aux","Swal","Redirect","create","isAuthenticated","Link","Create","useState","names","phone","address","email","status","password","password2","loading","redirectToPage","values","setValues","handleChange","name","event","target","value","submit","preventDefault","fire","handleCreate","user","Auth","token","data","error","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { create } from './api';\r\nimport {isAuthenticated} from '../../Auth/admin/api'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Create() {\r\n    const [values, setValues] = React.useState({\r\n        //code:\"\",\r\n        names:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        status:true,\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        \r\n    })\r\n    const { /*code,*/ names, phone, email, password, password2, address, status, loading, redirectToPage} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:true})\r\n        if(names===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District name is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n        if(password===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n        handleCreate();\r\n    }\r\n\r\n    const handleCreate =async ()=>{\r\n        const user = {names, phone, email, password, password2, address, status}\r\n        const Auth = await isAuthenticated()\r\n        const data = await create(user, Auth.token);\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n            setValues({...values, loading:false, redirectToPage:true});\r\n\r\n            let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n           });\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/districts/create\" />\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            <Row>\r\n                <Col>\r\n                    <Card.Header>\r\n                        <Card.Title><Link to=\"/admin/districts/read\" > Read Districts </Link></Card.Title>\r\n                    </Card.Header>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Add New District</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            {/*<Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district code\" onChange={handleChange(\"code\")} value={code} />\r\n                                            </Form.Group>*/}\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district name\" onChange={handleChange(\"names\")} value={names} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password Confirmation</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                            </Form.Group>\r\n                                            {\r\n                                                loading ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Create ..</Button>\r\n                                            }\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"building/house name, city\" onChange={handleChange(\"address\")} value={address} />\r\n                                            </Form.Group>\r\n                                            {<Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Officer-in- charge</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Education District ID\" />\r\n                                            </Form.Group>}\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        \r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}