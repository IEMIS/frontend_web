{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{Row,Col,Card,Form,Button}from'react-bootstrap';import Aux from\"../../../hoc/_Aux\";import Swal from'sweetalert2';import{useParams,Redirect}from\"react-router-dom\";import{edit,read}from'./api';export default function Edit(){var _useParams=useParams(),id=_useParams.id;var _React$useState=React.useState({code:\"\",names:\"\",phone:\"\",address:\"\",email:\"\",status:true,password:\"\",password2:\"\",loading:false,loadingBtn:false,redirectToPage:false,error:false,reload:false,token:'00033'}),_React$useState2=_slicedToArray(_React$useState,2),values=_React$useState2[0],setValues=_React$useState2[1];var code=values.code,names=values.names,phone=values.phone,email=values.email,password=values.password,password2=values.password2,address=values.address,status=values.status,error=values.error,loading=values.loading,loadingBtn=values.loadingBtn,reload=values.reload,redirectToPage=values.redirectToPage,token=values.token;var handleChange=function handleChange(name){return function(event){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,event.target.value)));};};var isLoading=function isLoading(){if(loading){return/*#__PURE__*/React.createElement(Aux,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Wait !!!.\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Requesting for District  data\"))))))));}};var isError=function isError(){if(error){return/*#__PURE__*/React.createElement(Aux,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Error in reading this user .\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"failed to read district data, Try again \",/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:handleReload},\"Reload\"),\" \"))))))));}};var handleReload=function handleReload(event){event.preventDefault();setValues(_objectSpread(_objectSpread({},values),{},{loading:false,error:false,reload:!reload}));};var submit=function submit(event){event.preventDefault();setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:true}));if(code===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false}));return Swal.fire('Oops...','District code is required','error');}if(names===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false}));return Swal.fire('Oops...','District name is required','error');}if(phone===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false}));return Swal.fire('Oops...','District Phone number is required','error');}if(address===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false}));return Swal.fire('Oops...','District address is required','error');}if(email===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false}));return Swal.fire('Oops...','District email is required','error');}if(password===\"\"){setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false}));return Swal.fire('Oops...','Password can not be an empty value','error');}if(password!==password2){setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false}));return Swal.fire('Oops...','Password must match each other','error');}handleUpdate();};var handleUpdate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user,data,Toast;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user={code:code,names:names,phone:phone,email:email,password:password,password2:password2,address:address,status:status};_context.next=3;return edit(id,user,token);case 3:data=_context.sent;if(data){_context.next=7;break;}Swal.fire('Oops...','internet server error, Please, check your network connection','error');return _context.abrupt(\"return\",setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false})));case 7:if(!data.error){_context.next=10;break;}Swal.fire('Oops...',data.error,'error');return _context.abrupt(\"return\",setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false})));case 10:if(!data.message){_context.next=15;break;}Swal.fire('Saved...',data.message,'success');setValues(_objectSpread(_objectSpread({},values),{},{loadingBtn:false,redirectToPage:true}));Toast=Swal.mixin({toast:true,timerProgressBar:true,position:'top-end',showConfirmButton:false,timer:3000});return _context.abrupt(\"return\",Toast.fire({animation:true,type:'success',title:'Request is successful'}));case 15:case\"end\":return _context.stop();}}},_callee);}));return function handleUpdate(){return _ref.apply(this,arguments);};}();var redirectUser=function redirectUser(){if(redirectToPage){return/*#__PURE__*/React.createElement(Redirect,{to:\"/admin/districts/read\"});}};React.useEffect(function(){var ignore=false;var bootstrap=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data,_data$data,_code,_names,_email,_phone,_address;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setValues(function(v){return _objectSpread(_objectSpread({},v),{},{loading:true});});_context2.next=3;return read(id);case 3:data=_context2.sent;if(ignore){_context2.next=17;break;}if(data){_context2.next=9;break;}Swal.fire('Oops...','internet server error, Please, check your network connection','error');setValues(function(v){return _objectSpread(_objectSpread({},v),{},{loading:false,error:true});});return _context2.abrupt(\"return\");case 9:if(!data.error){_context2.next=13;break;}Swal.fire('Oops...',data.error,'error');setValues(function(v){return _objectSpread(_objectSpread({},v),{},{loading:false,error:true});});return _context2.abrupt(\"return\");case 13:if(!data.message){_context2.next=17;break;}_data$data=data.data,_code=_data$data.code,_names=_data$data.names,_email=_data$data.email,_phone=_data$data.phone,_address=_data$data.address;setValues(function(v){return _objectSpread(_objectSpread({},v),{},{loading:false,error:false,code:_code,phone:_phone,email:_email,names:_names,address:_address});});return _context2.abrupt(\"return\",Swal.fire('Great',data.message,'success'));case 17:case\"end\":return _context2.stop();}}},_callee2);}));return function bootstrap(){return _ref2.apply(this,arguments);};}();bootstrap();return function(){ignore=true;};},[reload,id]);return/*#__PURE__*/React.createElement(Aux,null,redirectUser(),isError(),loading?isLoading():/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h3\"},\"Update the District\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"District Code\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"district code\",onChange:handleChange(\"code\"),value:code})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"District Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"district name\",onChange:handleChange(\"names\"),value:names})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Phone \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"district phone\",onChange:handleChange(\"phone\"),value:phone})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\",onChange:handleChange(\"password\"),value:password})),loadingBtn?\"loading ...\":/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:submit},\"Update..\"))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Address \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"building/house name, city\",onChange:handleChange(\"address\"),value:address})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Officer-in- charge\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Education District ID\"})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"exampleForm.ControlInput1\"},/*#__PURE__*/React.createElement(Form.Label,null,\"email \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"email\",onChange:handleChange(\"email\"),value:email})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password Confirmation\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Password Confirmation\",onChange:handleChange(\"password2\"),value:password2})))))))));}","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/district/Edit.js"],"names":["React","Row","Col","Card","Form","Button","Aux","Swal","useParams","Redirect","edit","read","Edit","id","useState","code","names","phone","address","email","status","password","password2","loading","loadingBtn","redirectToPage","error","reload","token","values","setValues","handleChange","name","event","target","value","isLoading","isError","handleReload","preventDefault","submit","fire","handleUpdate","user","data","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser","useEffect","ignore","bootstrap","v"],"mappings":"osBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,CAAaC,GAAb,CAAkBC,IAAlB,CAAwBC,IAAxB,CAA8BC,MAA9B,KAA2C,iBAA3C,CAEA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,kBAApC,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,OAA3B,CAGA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAC3B,eAAaJ,SAAS,EAAtB,CAAMK,EAAN,YAAMA,EAAN,CAEA,oBAA4Bb,KAAK,CAACc,QAAN,CAAe,CACvCC,IAAI,CAAC,EADkC,CAEvCC,KAAK,CAAC,EAFiC,CAGvCC,KAAK,CAAC,EAHiC,CAIvCC,OAAO,CAAC,EAJ+B,CAKvCC,KAAK,CAAC,EALiC,CAMvCC,MAAM,CAAC,IANgC,CAOvCC,QAAQ,CAAC,EAP8B,CAQvCC,SAAS,CAAC,EAR6B,CASvCC,OAAO,CAAC,KAT+B,CAUvCC,UAAU,CAAC,KAV4B,CAWvCC,cAAc,CAAC,KAXwB,CAYvCC,KAAK,CAAC,KAZiC,CAavCC,MAAM,CAAC,KAbgC,CAcvCC,KAAK,CAAC,OAdiC,CAAf,CAA5B,oDAAOC,MAAP,qBAAeC,SAAf,qBAkBA,GAAOf,CAAAA,IAAP,CAAqIc,MAArI,CAAOd,IAAP,CAAaC,KAAb,CAAqIa,MAArI,CAAab,KAAb,CAAoBC,KAApB,CAAqIY,MAArI,CAAoBZ,KAApB,CAA2BE,KAA3B,CAAqIU,MAArI,CAA2BV,KAA3B,CAAkCE,QAAlC,CAAqIQ,MAArI,CAAkCR,QAAlC,CAA4CC,SAA5C,CAAqIO,MAArI,CAA4CP,SAA5C,CAAuDJ,OAAvD,CAAqIW,MAArI,CAAuDX,OAAvD,CAAgEE,MAAhE,CAAqIS,MAArI,CAAgET,MAAhE,CAAwEM,KAAxE,CAAqIG,MAArI,CAAwEH,KAAxE,CAA+EH,OAA/E,CAAqIM,MAArI,CAA+EN,OAA/E,CAAwFC,UAAxF,CAAqIK,MAArI,CAAwFL,UAAxF,CAAoGG,MAApG,CAAqIE,MAArI,CAAoGF,MAApG,CAA4GF,cAA5G,CAAqII,MAArI,CAA4GJ,cAA5G,CAA4HG,KAA5H,CAAqIC,MAArI,CAA4HD,KAA5H,CAEA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,IAAI,QAAE,UAAAC,KAAK,CAAE,CAC9BH,SAAS,gCAAKD,MAAL,wBAAcG,IAAd,CAAoBC,KAAK,CAACC,MAAN,CAAaC,KAAjC,GAAT,CACH,CAFwB,EAAzB,CAIA,GAAMC,CAAAA,SAAS,CAAE,QAAXA,CAAAA,SAAW,EAAM,CACnB,GAAGb,OAAH,CAAW,CACP,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACA,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,IAAf,cADJ,CADJ,cAII,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,8DADJ,CADJ,CADJ,CAJJ,CADA,CADJ,CADJ,CADJ,CAoBH,CACJ,CAvBD,CAwBA,GAAMc,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAGX,KAAH,CAAS,CACL,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACA,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,IAAf,iCADJ,CADJ,cAII,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,sFAA4C,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAEY,YAAnC,WAA5C,KADJ,CADJ,CADJ,CAJJ,CADA,CADJ,CADJ,CADJ,CAoBH,CACJ,CAvBD,CAyBA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAL,KAAK,CAAG,CACzBA,KAAK,CAACM,cAAN,GACAT,SAAS,gCAAKD,MAAL,MAAaN,OAAO,CAAC,KAArB,CAA4BG,KAAK,CAAC,KAAlC,CAAyCC,MAAM,CAAC,CAACA,MAAjD,GAAT,CACH,CAHD,CAKA,GAAMa,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAP,KAAK,CAAG,CACnBA,KAAK,CAACM,cAAN,GACAT,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,IAAxB,GAAT,CACA,GAAGT,IAAI,GAAG,EAAV,CAAa,CACTe,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAAT,CACA,MAAOjB,CAAAA,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,2BAArB,CAAkD,OAAlD,CAAP,CACH,CACD,GAAGzB,KAAK,GAAG,EAAX,CAAc,CACVc,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAAT,CACA,MAAOjB,CAAAA,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,2BAArB,CAAkD,OAAlD,CAAP,CACH,CACD,GAAGxB,KAAK,GAAG,EAAX,CAAc,CACVa,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAAT,CACA,MAAOjB,CAAAA,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,mCAArB,CAA0D,OAA1D,CAAP,CACH,CACD,GAAGvB,OAAO,GAAG,EAAb,CAAgB,CACZY,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAAT,CACA,MAAOjB,CAAAA,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,8BAArB,CAAqD,OAArD,CAAP,CACH,CACD,GAAGtB,KAAK,GAAG,EAAX,CAAc,CACVW,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAAT,CACA,MAAOjB,CAAAA,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,4BAArB,CAAmD,OAAnD,CAAP,CACH,CACD,GAAGpB,QAAQ,GAAG,EAAd,CAAiB,CACbS,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAAT,CACA,MAAOjB,CAAAA,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,oCAArB,CAA2D,OAA3D,CAAP,CACH,CAED,GAAGpB,QAAQ,GAAKC,SAAhB,CAA2B,CACvBQ,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAAT,CACA,MAAOjB,CAAAA,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,gCAArB,CAAuD,OAAvD,CAAP,CACH,CAEDC,YAAY,GACf,CAlCD,CAoCA,GAAMA,CAAAA,YAAY,0FAAE,uJACVC,IADU,CACH,CAAC5B,IAAI,CAAJA,IAAD,CAAOC,KAAK,CAALA,KAAP,CAAcC,KAAK,CAALA,KAAd,CAAqBE,KAAK,CAALA,KAArB,CAA4BE,QAAQ,CAARA,QAA5B,CAAsCC,SAAS,CAATA,SAAtC,CAAiDJ,OAAO,CAAPA,OAAjD,CAA0DE,MAAM,CAANA,MAA1D,CADG,uBAEGV,CAAAA,IAAI,CAACG,EAAD,CAAK8B,IAAL,CAAWf,KAAX,CAFP,QAEVgB,IAFU,kBAIZA,IAJY,yBAKZrC,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,8DAArB,CAAqF,OAArF,EALY,gCAMLX,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GANJ,aAQboB,IAAI,CAAClB,KARQ,0BASZnB,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqBG,IAAI,CAAClB,KAA1B,CAAiC,OAAjC,EATY,gCAULI,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,GAVJ,cAYboB,IAAI,CAACC,OAZQ,0BAaZtC,IAAI,CAACkC,IAAL,CAAU,UAAV,CAAsBG,IAAI,CAACC,OAA3B,CAAoC,SAApC,EACAf,SAAS,gCAAKD,MAAL,MAAaL,UAAU,CAAC,KAAxB,CAA+BC,cAAc,CAAC,IAA9C,GAAT,CAEIqB,KAhBQ,CAgBAvC,IAAI,CAACwC,KAAL,CAAW,CACvBC,KAAK,CAAE,IADgB,CAEvBC,gBAAgB,CAAE,IAFK,CAGvBC,QAAQ,CAAE,SAHa,CAIvBC,iBAAiB,CAAE,KAJI,CAKvBC,KAAK,CAAE,IALgB,CAAX,CAhBA,iCAuBLN,KAAK,CAACL,IAAN,CAAW,CACdY,SAAS,CAAE,IADG,CAEdC,IAAI,CAAE,SAFQ,CAGdC,KAAK,CAAE,uBAHO,CAAX,CAvBK,yDAAF,kBAAZb,CAAAA,YAAY,0CAAlB,CA+BA,GAAMc,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAI/B,cAAJ,CAAmB,CACf,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,uBAAb,EAAP,CACH,CACJ,CAJD,CAMAzB,KAAK,CAACyD,SAAN,CAAgB,UAAM,CAClB,GAAIC,CAAAA,MAAM,CAAG,KAAb,CACA,GAAMC,CAAAA,SAAS,2FAAG,gMACd7B,SAAS,CAAC,SAAA8B,CAAC,wCAASA,CAAT,MAAYrC,OAAO,CAAC,IAApB,IAAF,CAAT,CADc,uBAEKZ,CAAAA,IAAI,CAACE,EAAD,CAFT,QAER+B,IAFQ,mBAITc,MAJS,8BAKNd,IALM,0BAMNrC,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqB,8DAArB,CAAqF,OAArF,EACAX,SAAS,CAAC,SAAA8B,CAAC,wCAASA,CAAT,MAAYrC,OAAO,CAAC,KAApB,CAA2BG,KAAK,CAAC,IAAjC,IAAF,CAAT,CAPM,6CAUPkB,IAAI,CAAClB,KAVE,2BAWNnB,IAAI,CAACkC,IAAL,CAAU,SAAV,CAAqBG,IAAI,CAAClB,KAA1B,CAAiC,OAAjC,EACAI,SAAS,CAAC,SAAA8B,CAAC,wCAASA,CAAT,MAAYrC,OAAO,CAAC,KAApB,CAA2BG,KAAK,CAAC,IAAjC,IAAF,CAAT,CAZM,8CAgBPkB,IAAI,CAACC,OAhBE,sCAiBuCD,IAAI,CAACA,IAjB5C,CAiBC7B,KAjBD,YAiBCA,IAjBD,CAiBOC,MAjBP,YAiBOA,KAjBP,CAiBcG,MAjBd,YAiBcA,KAjBd,CAiBqBF,MAjBrB,YAiBqBA,KAjBrB,CAiB2BC,QAjB3B,YAiB2BA,OAjB3B,CAkBNY,SAAS,CAAC,SAAA8B,CAAC,wCAASA,CAAT,MAAYrC,OAAO,CAAC,KAApB,CAA2BG,KAAK,CAAC,KAAjC,CAAwCX,IAAI,CAAJA,KAAxC,CAA8CE,KAAK,CAALA,MAA9C,CAAoDE,KAAK,CAALA,MAApD,CAA0DH,KAAK,CAALA,MAA1D,CAAiEE,OAAO,CAAPA,QAAjE,IAAF,CAAT,CAlBM,iCAmBCX,IAAI,CAACkC,IAAL,CAAU,OAAV,CAAmBG,IAAI,CAACC,OAAxB,CAAiC,SAAjC,CAnBD,2DAAH,kBAATc,CAAAA,SAAS,2CAAf,CAuBAA,SAAS,GACT,MAAO,WAAM,CAAED,MAAM,CAAG,IAAT,CAAe,CAA9B,CACH,CA3BD,CA2BE,CAAC/B,MAAD,CAASd,EAAT,CA3BF,EA6BA,mBACI,oBAAC,GAAD,MACC2C,YAAY,EADb,CAECnB,OAAO,EAFR,CAIId,OAAO,CAAGa,SAAS,EAAZ,cACP,oBAAC,GAAD,mBACQ,oBAAC,GAAD,mBACI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,IAAf,wBADJ,CADJ,cAII,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,eACI,oBAAC,IAAD,CAAM,KAAN,sBADJ,cAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,eAAtC,CAAsD,QAAQ,CAAEL,YAAY,CAAC,MAAD,CAA5E,CAAsF,KAAK,CAAEhB,IAA7F,EAFJ,CADJ,cAMI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,eACI,oBAAC,IAAD,CAAM,KAAN,sBADJ,cAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,eAAtC,CAAsD,QAAQ,CAAEgB,YAAY,CAAC,OAAD,CAA5E,CAAuF,KAAK,CAAEf,KAA9F,EAFJ,CANJ,cAUI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,eACI,oBAAC,IAAD,CAAM,KAAN,eADJ,cAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,gBAAtC,CAAuD,QAAQ,CAAEe,YAAY,CAAC,OAAD,CAA7E,CAAwF,KAAK,CAAEd,KAA/F,EAFJ,CAVJ,cAcI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,mBAAtB,eACI,oBAAC,IAAD,CAAM,KAAN,iBADJ,cAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,UAAnB,CAA8B,WAAW,CAAC,UAA1C,CAAqD,QAAQ,CAAEc,YAAY,CAAC,UAAD,CAA3E,CAAyF,KAAK,CAAEV,QAAhG,EAFJ,CAdJ,CAmBQG,UAAU,CAAG,aAAH,cAAmB,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAEgB,MAAnC,aAnBrC,CADJ,CADJ,cAyBI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACA,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,eACY,oBAAC,IAAD,CAAM,KAAN,iBADZ,cAEY,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,2BAAtC,CAAkE,QAAQ,CAAET,YAAY,CAAC,SAAD,CAAxF,CAAqG,KAAK,CAAEb,OAA5G,EAFZ,CADA,cAKQ,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,eACI,oBAAC,IAAD,CAAM,KAAN,2BADJ,cAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,uBAAtC,EAFJ,CALR,cASI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,2BAAtB,eACI,oBAAC,IAAD,CAAM,KAAN,eADJ,cAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,OAAnB,CAA2B,WAAW,CAAC,OAAvC,CAA+C,QAAQ,CAAEa,YAAY,CAAC,OAAD,CAArE,CAAgF,KAAK,CAAEZ,KAAvF,EAFJ,CATJ,cAaI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,mBAAtB,eACI,oBAAC,IAAD,CAAM,KAAN,8BADJ,cAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,UAAnB,CAA8B,WAAW,CAAC,uBAA1C,CAAkE,QAAQ,CAAEY,YAAY,CAAC,WAAD,CAAxF,CAAuG,KAAK,CAAET,SAA9G,EAFJ,CAbJ,CAzBJ,CADJ,CAJJ,CADJ,CADR,CALJ,CADJ,CAiEH","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { edit, read } from './api';\r\n\r\n\r\nexport default function Edit() {\r\n    let { id } = useParams();\r\n\r\n    const [values, setValues] = React.useState({\r\n        code:\"\",\r\n        names:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        status:true,\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        loadingBtn:false,\r\n        redirectToPage:false,\r\n        error:false,\r\n        reload:false,\r\n        token:'00033'\r\n        \r\n    })\r\n\r\n    const {code, names, phone, email, password, password2, address, status, error, loading, loadingBtn, reload, redirectToPage, token} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const isLoading= () => {\r\n        if(loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Wait !!!.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Requesting for District  data</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Error in reading this user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>failed to read district data, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:false, error:false, reload:!reload})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loadingBtn:true})\r\n        if(code===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District code is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District name is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n        if(password===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n\r\n        handleUpdate();\r\n    }\r\n\r\n    const handleUpdate =async ()=>{\r\n        const user = {code, names, phone, email, password, password2, address, status}\r\n        const data = await edit(id, user, token);\r\n        //console.log(data)\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n            setValues({...values, loadingBtn:false, redirectToPage:true});\r\n\r\n            let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n           });\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/districts/read\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let ignore = false;\r\n        const bootstrap = async ()=>{\r\n            setValues(v => ({...v, loading:true}))\r\n            const data = await read(id);\r\n            //console.log({data, id})\r\n            if (!ignore){\r\n                if(!data){\r\n                    Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\r\n                    setValues(v => ({...v, loading:false, error:true}))  \r\n                    return  \r\n                }\r\n                if(data.error){\r\n                    Swal.fire('Oops...', data.error, 'error')\r\n                    setValues(v => ({...v, loading:false, error:true})) \r\n                    return \r\n                }\r\n        \r\n                if(data.message){\r\n                    const {code, names, email, phone,address } = data.data;\r\n                    setValues(v => ({...v, loading:false, error:false, code, phone,email,names, address }))\r\n                    return Swal.fire('Great', data.message, 'success');\r\n                } \r\n            }\r\n        }\r\n        bootstrap()\r\n        return () => { ignore = true };\r\n    },[reload, id])\r\n\r\n    return (\r\n        <Aux>\r\n        {redirectUser()}\r\n        {isError()}\r\n        {\r\n            loading ? isLoading() :\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Update the District</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district code\" onChange={handleChange(\"code\")} value={code} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district name\" onChange={handleChange(\"names\")} value={names} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                            {\r\n                                                loadingBtn ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Update..</Button>\r\n                                            }\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"building/house name, city\" onChange={handleChange(\"address\")} value={address} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Officer-in- charge</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Education District ID\" />\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label>Password Confirmation</Form.Label>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n            </Row>\r\n        } \r\n        </Aux>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}