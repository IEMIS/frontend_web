{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\district\\\\Create.js\";\nimport React from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { Redirect } from 'react-router-dom';\nimport { create } from './api';\nexport default function Create() {\n  var _React$useState = React.useState({\n    code: \"\",\n    names: \"\",\n    phone: \"\",\n    address: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    loading: false,\n    redirectToPage: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var code = values.code,\n      names = values.names,\n      phone = values.phone,\n      email = values.email,\n      password = values.password,\n      password2 = values.password2,\n      address = values.address,\n      loading = values.loading,\n      redirectToPage = values.redirectToPage;\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread({}, values, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    setValues(_objectSpread({}, values, {\n      loading: true\n    }));\n\n    if (code === \"\") {\n      setValues(_objectSpread({}, values, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District code is required', 'error');\n    }\n\n    if (names === \"\") {\n      setValues(_objectSpread({}, values, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District name is required', 'error');\n    }\n\n    if (phone === \"\") {\n      setValues(_objectSpread({}, values, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'Phone number is required', 'error');\n    }\n\n    if (address === \"\") {\n      setValues(_objectSpread({}, values, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District address is required', 'error');\n    }\n\n    if (email === \"\") {\n      setValues(_objectSpread({}, values, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'District email is required', 'error');\n    }\n\n    if (password !== password2) {\n      setValues(_objectSpread({}, values, {\n        loading: false\n      }));\n      return Swal.fire('Oops...', 'Password must match each other', 'error');\n    }\n\n    handleCreate();\n  };\n\n  var handleCreate =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var user, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                code: code,\n                names: names,\n                phone: phone,\n                email: email,\n                password: password,\n                password2: password2,\n                address: address\n              };\n              console.log({\n                user: user\n              });\n              _context.next = 4;\n              return create(user);\n\n            case 4:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 8;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread({}, values, {\n                loading: false\n              })));\n\n            case 8:\n              if (!data.error) {\n                _context.next = 11;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread({}, values, {\n                loading: false\n              })));\n\n            case 11:\n              if (!data.message) {\n                _context.next = 14;\n                break;\n              }\n\n              Swal.fire('Oops...', data.message, 'success');\n              return _context.abrupt(\"return\", setValues(_objectSpread({}, values, {\n                loading: false,\n                redirectToPage: true\n              })));\n\n            case 14:\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              return _context.abrupt(\"return\", Toast.fire({\n                animation: true,\n                type: 'success',\n                title: 'Request is successful'\n              }));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCreate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return React.createElement(Redirect, {\n        to: \"/admin/districts/create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, redirectUser(), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Add New District\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"District Code\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district code\",\n    onChange: handleChange(\"code\"),\n    value: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"District Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district name\",\n    onChange: handleChange(\"names\"),\n    value: names,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Phone \"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district phone\",\n    onChange: handleChange(\"phone\"),\n    value: phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Address \"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"district address\",\n    onChange: handleChange(\"address\"),\n    value: address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"email \"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"email\",\n    onChange: handleChange(\"email\"),\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange(\"password\"),\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Password Confirmation\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password Confirmation\",\n    onChange: handleChange(\"password2\"),\n    value: password2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), loading ? \"loading ...\" : React.createElement(Button, {\n    variant: \"primary\",\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Create ..\"))))))));\n}","map":{"version":3,"sources":["C:\\Users\\VP\\web\\src\\screen\\admin\\district\\Create.js"],"names":["React","Row","Col","Card","Form","Button","Aux","Swal","Redirect","create","Create","useState","code","names","phone","address","email","password","password2","loading","redirectToPage","values","setValues","handleChange","name","event","target","value","submit","preventDefault","fire","handleCreate","user","console","log","data","error","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { create } from './api';\r\n\r\n\r\nexport default function Create() {\r\n\r\n    const [values, setValues] = React.useState({\r\n        code:\"\",\r\n        names:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n    })\r\n    const {code, names, phone, email, password, password2, address, loading, redirectToPage} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:true})\r\n        if(code===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District code is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District name is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n\r\n        handleCreate();\r\n    }\r\n\r\n    const handleCreate =async ()=>{\r\n        const user = {code, names, phone, email, password, password2, address}\r\n        console.log({user})\r\n        const data = await create(user);\r\n        \r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n\r\n        if(data.message){\r\n            Swal.fire('Oops...', data.message, 'success')\r\n           return setValues({...values, loading:false, redirectToPage:true})\r\n        }\r\n\r\n        let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        });\r\n\r\n        return Toast.fire({\r\n            animation: true,\r\n            type: 'success',\r\n            title: 'Request is successful'\r\n        })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/districts/create\" />\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Add New District</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district code\" onChange={handleChange(\"code\")} value={code} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district name\" onChange={handleChange(\"names\")} value={names} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district address\" onChange={handleChange(\"address\")} value={address} />\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label>Password Confirmation</Form.Label>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                        </Form.Group>\r\n                                        \r\n                                        {\r\n                                                loading ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Create ..</Button>\r\n                                            }\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}