{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\school\\\\Read.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { reads } from './api';\nimport { Link } from 'react-router-dom';\nexport default function Read() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      datas = _React$useState2[0],\n      setDatas = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      reload = _React$useState8[0],\n      setReload = _React$useState8[1];\n  /*\r\n  const [values, setValues] = React.useState({\r\n      datas:[],\r\n      loading: false,\r\n      error:false,\r\n      reload:false,\r\n  })\r\n  */\n  //const {datas,loading, error, reload } = values;\n\n  /*\r\n  const bootrap = async () =>{\r\n      setValues({...values, loading:true})\r\n      const data = await reads();\r\n      if(!data){\r\n          Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n          return setValues({...values, loading:false, error:true})\r\n      }\r\n      if(data.error){\r\n          Swal.fire('Oops...', data.error, 'error')\r\n          return setValues({...values, loading:false, error:true})\r\n      }\r\n      if(data.message){\r\n          Swal.fire('Oops...', data.message, 'success')\r\n          setValues({...values, datas:data.data, loading:false, error:false})\r\n      }\r\n      let Toast = Swal.mixin({\r\n          toast: true,\r\n          timerProgressBar: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      });\r\n        return Toast.fire({\r\n          showClass: true,\r\n          type: 'success',\r\n          title: data.message\r\n      })\r\n  }\r\n  */\n\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, \"Wait loading data ...\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, \"School List is loading \"))))))));\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, \"Error in Loading Data.\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 41\n        }\n      }, \"School data failed to Load, you can refresh \", /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: handleReload,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 89\n        }\n      }, \"Reload\"), \" \"))))))));\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setError(false);\n    setLoading(true);\n    setReload(!reload);\n  };\n\n  var ViewData = function ViewData() {\n    if (datas && datas.length > 0) {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 37\n        }\n      }, \"School List\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block m-t-5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }\n      }, \"manage  \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 77\n        }\n      }, \"the \"), \" school data here\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        responsive: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 49\n        }\n      }, \"School Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 49\n        }\n      }, \"School Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 49\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 49\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 49\n        }\n      }, \"School Head\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 49\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 49\n        }\n      }, \"Detail\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 49\n        }\n      }, \"Delete\"))), datas.map(function (data, i) {\n        return /*#__PURE__*/React.createElement(\"tbody\", {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"row\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 61\n          }\n        }, data.code), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 61\n          }\n        }, data.names), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 61\n          }\n        }, data.phone), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 61\n          }\n        }, data.email), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 61\n          }\n        }, data.headID), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/admin/schools/edit/\".concat(data._id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 66\n          }\n        }, \"Edit\")), /*#__PURE__*/React.createElement(\"td\", {\n          variant: \"primary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/admin/schools/read/\".concat(data._id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 84\n          }\n        }, \"Detail\")), /*#__PURE__*/React.createElement(\"td\", {\n          variant: \"danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/admin/schools/delete/\".concat(data._id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 83\n          }\n        }, \"Delete\"))));\n      })))))));\n    } else {\n      /*\r\n      return (\r\n          <Aux>\r\n              <Row>\r\n                  <Col>\r\n                      <Card>\r\n                          <Card.Header>\r\n                              <Card.Title as=\"h5\">No record</Card.Title>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                          </Card.Body>\r\n                      </Card>\r\n                  </Col>\r\n              </Row>\r\n          </Aux>\r\n      )\r\n      */\n    }\n  };\n\n  var boot = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //setValues({...values, loading:true})\n              setLoading(true);\n              _context.next = 3;\n              return reads();\n\n            case 3:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 9;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              setLoading(false);\n              setError(true); //return setValues({...values, loading:false, error:true})\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              if (!data.error) {\n                _context.next = 14;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              setLoading(false);\n              setError(true);\n              return _context.abrupt(\"return\");\n\n            case 14:\n              if (data.message) {\n                setLoading(false);\n                setError(false);\n                setDatas(data.data);\n                Swal.fire('Successful....', data.message, 'success'); //return\n                //setValues({...values, datas:data.data, loading:false, error:false})\n              }\n\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              return _context.abrupt(\"return\", Toast.fire({\n                showClass: true,\n                type: 'success',\n                title: data.message\n              }));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function boot() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  React.useEffect(function () {\n    boot();\n    return function () {\n      boot();\n    };\n  }, [reload]);\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, isLoading(), isError(), ViewData());\n}\n\n_s(Read, \"uAM0VyZwuMAsheaM45OD0FkE4FM=\");\n\n_c = Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/school/Read.js"],"names":["React","Row","Col","Card","Button","Table","Aux","Swal","reads","Link","Read","useState","datas","setDatas","loading","setLoading","error","setError","reload","setReload","isLoading","isError","handleReload","event","preventDefault","ViewData","length","map","data","i","code","names","phone","email","headID","_id","boot","fire","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","showClass","type","title","useEffect"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA4C,iBAA5C;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,QAAqB,OAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC3B,wBAA0BV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAA8Bb,KAAK,CAACW,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAA0Bf,KAAK,CAACW,QAAN,CAAe,KAAf,CAA1B;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAA4BjB,KAAK,CAACW,QAAN,CAAe,KAAf,CAA5B;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGI,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAIN,OAAJ,EAAY;AACR,0BACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADA,CADJ,CADJ,CAJJ,CADA,CADJ,CADJ,CADJ;AAoBH;AACJ,GAvBD;;AAyBA,MAAMO,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAGL,KAAH,EAAS;AACL,0BACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAgD,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEM,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhD,MADJ,CADJ,CADJ,CAJJ,CADA,CADJ,CADJ,CADJ;AAoBH;AACJ,GAvBD;;AAyBA,MAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAG;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GALD;;AAOA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAClB,QAAGb,KAAK,IAAIA,KAAK,CAACc,MAAN,GAAe,CAA3B,EAA6B;AACzB,0BACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxC,sBAFJ,CADJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CADJ,CADJ,EAcQd,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAW;AACjB,4BACI;AAAO,UAAA,GAAG,EAAEA,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,IAAI,CAACE,IAAtB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACG,KAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,IAAI,CAACI,KAAV,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,IAAI,CAACK,KAAV,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKL,IAAI,CAACM,MAAV,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAK,oBAAC,IAAD;AAAM,UAAA,EAAE,gCAAyBN,IAAI,CAACO,GAA9B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,CANJ,eAOI;AAAK,UAAA,OAAO,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAuB,oBAAC,IAAD;AAAM,UAAA,EAAE,gCAAyBP,IAAI,CAACO,GAA9B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvB,CAPJ,eAQI;AAAK,UAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsB,oBAAC,IAAD;AAAM,UAAA,EAAE,kCAA2BP,IAAI,CAACO,GAAhC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtB,CARJ,CADJ,CADJ;AAeH,OAhBD,CAdR,CADJ,CALJ,CADJ,CADJ,CADJ,CADJ;AAiDH,KAlDD,MAkDK;AACD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS;AACJ,GAtED;;AAwEA,MAAMC,IAAI;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACT;AACArB,cAAAA,UAAU,CAAC,IAAD,CAAV;AAFS;AAAA,qBAGUP,KAAK,EAHf;;AAAA;AAGHoB,cAAAA,IAHG;;AAAA,kBAILA,IAJK;AAAA;AAAA;AAAA;;AAKLrB,cAAAA,IAAI,CAAC8B,IAAL,CAAU,SAAV,EAAqB,8DAArB,EAAqF,OAArF;AACAtB,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,cAAAA,QAAQ,CAAC,IAAD,CAAR,CAPK,CAQL;;AARK;;AAAA;AAAA,mBAWNW,IAAI,CAACZ,KAXC;AAAA;AAAA;AAAA;;AAYLT,cAAAA,IAAI,CAAC8B,IAAL,CAAU,SAAV,EAAqBT,IAAI,CAACZ,KAA1B,EAAiC,OAAjC;AACAD,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAdK;;AAAA;AAkBT,kBAAGW,IAAI,CAACU,OAAR,EAAgB;AACZvB,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,gBAAAA,QAAQ,CAAC,KAAD,CAAR;AACAJ,gBAAAA,QAAQ,CAACe,IAAI,CAACA,IAAN,CAAR;AACArB,gBAAAA,IAAI,CAAC8B,IAAL,CAAU,gBAAV,EAA4BT,IAAI,CAACU,OAAjC,EAA0C,SAA1C,EAJY,CAKZ;AACA;AACH;;AACGC,cAAAA,KA1BK,GA0BGhC,IAAI,CAACiC,KAAL,CAAW;AACnBC,gBAAAA,KAAK,EAAE,IADY;AAEnBC,gBAAAA,gBAAgB,EAAE,IAFC;AAGnBC,gBAAAA,QAAQ,EAAE,SAHS;AAInBC,gBAAAA,iBAAiB,EAAE,KAJA;AAKnBC,gBAAAA,KAAK,EAAE;AALY,eAAX,CA1BH;AAAA,+CAkCFN,KAAK,CAACF,IAAN,CAAW;AACdS,gBAAAA,SAAS,EAAE,IADG;AAEdC,gBAAAA,IAAI,EAAE,SAFQ;AAGdC,gBAAAA,KAAK,EAAEpB,IAAI,CAACU;AAHE,eAAX,CAlCE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJF,IAAI;AAAA;AAAA;AAAA,KAAV;;AAyCApC,EAAAA,KAAK,CAACiD,SAAN,CAAgB,YAAM;AAClBb,IAAAA,IAAI;AACJ,WAAO,YAAM;AACTA,MAAAA,IAAI;AACP,KAFD;AAGH,GALD,EAKE,CAAClB,MAAD,CALF;AAOA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,SAAS,EADd,EAEKC,OAAO,EAFZ,EAGKI,QAAQ,EAHb,CADJ;AAOH;;GAxOuBf,I;;KAAAA,I","sourcesContent":["\r\nimport React from 'react';\r\nimport {Row, Col, Card, Button, Table} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport { reads} from './api';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Read() {\r\n    const [datas, setDatas] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(false)\r\n    const [reload, setReload] = React.useState(false)\r\n\r\n    /*\r\n    const [values, setValues] = React.useState({\r\n        datas:[],\r\n        loading: false,\r\n        error:false,\r\n        reload:false,\r\n    })\r\n    */\r\n\r\n    //const {datas,loading, error, reload } = values;\r\n    /*\r\n    const bootrap = async () =>{\r\n        setValues({...values, loading:true})\r\n        const data = await reads();\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loading:false, error:true})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loading:false, error:true})\r\n        }\r\n        if(data.message){\r\n            Swal.fire('Oops...', data.message, 'success')\r\n            setValues({...values, datas:data.data, loading:false, error:false})\r\n        }\r\n        let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        });\r\n\r\n        return Toast.fire({\r\n            showClass: true,\r\n            type: 'success',\r\n            title: data.message\r\n        })\r\n    }\r\n    */\r\n\r\n    const isLoading = () => {\r\n        if (loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Wait loading data ...</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                    <h1>School List is loading </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Error in Loading Data.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>School data failed to Load, you can refresh <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setError(false)\r\n        setLoading(true)\r\n        setReload(!reload) \r\n    }\r\n\r\n    const ViewData = () =>{\r\n        if(datas && datas.length > 0){\r\n            return(\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h5\">School List</Card.Title>\r\n                                    <span className=\"d-block m-t-5\">manage  <code>the </code> school data here</span>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Table responsive>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>School Code</th>\r\n                                                <th>School Name</th>\r\n                                                <th>Phone</th>\r\n                                                <th>Email</th>\r\n                                                <th>School Head</th>\r\n                                                <th>Edit</th>\r\n                                                <th>Detail</th>\r\n                                                <th>Delete</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {\r\n                                            datas.map((data, i)=>{\r\n                                                return(\r\n                                                    <tbody key={i}>\r\n                                                        <tr key={i}>\r\n                                                            <th scope=\"row\">{data.code}</th>\r\n                                                            <td>{data.names}</td>\r\n                                                            <td>{data.phone}</td>\r\n                                                            <td>{data.email}</td>\r\n                                                            <td>{data.headID}</td>\r\n                                                            <td ><Link to={`/admin/schools/edit/${data._id}`}>Edit</Link></td>\r\n                                                            <td  variant=\"primary\"><Link to={`/admin/schools/read/${data._id}`}>Detail</Link></td>\r\n                                                            <td  variant=\"danger\"><Link to={`/admin/schools/delete/${data._id}`}>Delete</Link></td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )        \r\n        }else{\r\n            /*\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h5\">No record</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n            */\r\n        }\r\n    }\r\n\r\n    const boot = async () => {\r\n        //setValues({...values, loading:true})\r\n        setLoading(true)\r\n        const data = await reads();\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            setLoading(false)\r\n            setError(true)\r\n            //return setValues({...values, loading:false, error:true})\r\n            return \r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            setLoading(false)\r\n            setError(true)\r\n            return\r\n            //return setValues({...values, loading:false, error:true})\r\n        }\r\n        if(data.message){\r\n            setLoading(false)\r\n            setError(false)\r\n            setDatas(data.data)\r\n            Swal.fire('Successful....', data.message, 'success')\r\n            //return\r\n            //setValues({...values, datas:data.data, loading:false, error:false})\r\n        }\r\n        let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        });\r\n\r\n        return Toast.fire({\r\n            showClass: true,\r\n            type: 'success',\r\n            title: data.message\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        boot()\r\n        return () => {\r\n            boot()\r\n        }\r\n    },[reload])\r\n\r\n    return (\r\n        <Aux>\r\n            {isLoading()}\r\n            {isError()}\r\n            {ViewData()}\r\n        </Aux>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}