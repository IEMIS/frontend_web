{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\district\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport { useParams, Redirect, Link } from \"react-router-dom\";\nimport { edit, read } from './api';\nimport Aux from \"../../../hoc/_Aux\";\nimport { isAuthenticated } from '../../Auth/admin/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  var _this = this;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState({\n    code: \"\",\n    names: \"\",\n    phone: \"\",\n    address: \"\",\n    email: \"\",\n    status: true,\n    password: \"\",\n    password2: \"\",\n    loading: false,\n    loadingBtn: false,\n    redirectToPage: false,\n    error: false,\n    reload: false,\n    token: '00033'\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var code = values.code,\n      names = values.names,\n      phone = values.phone,\n      email = values.email,\n      password = values.password,\n      password2 = values.password2,\n      address = values.address,\n      status = values.status,\n      error = values.error,\n      loading = values.loading,\n      loadingBtn = values.loadingBtn,\n      reload = values.reload,\n      redirectToPage = values.redirectToPage;\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Wait !!!.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Requesting for District  data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Error in reading this user .\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: [\"failed to read district data, Try again \", /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"primary\",\n                        onClick: handleReload,\n                        children: \"Reload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 85\n                      }, _this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false,\n      error: false,\n      reload: !reload\n    }));\n  };\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loadingBtn: true\n    }));\n\n    if (code === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District code is required', 'error');\n    }\n\n    if (names === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District name is required', 'error');\n    }\n\n    if (phone === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District Phone number is required', 'error');\n    }\n\n    if (address === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District address is required', 'error');\n    }\n\n    if (email === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'District email is required', 'error');\n    }\n\n    if (password === \"\") {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\n    }\n\n    if (password !== password2) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loadingBtn: false\n      }));\n      return Swal.fire('Oops...', 'Password must match each other', 'error');\n    }\n\n    handleUpdate();\n  };\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, Auth, data, Toast;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                code: code,\n                names: names,\n                phone: phone,\n                email: email,\n                password: password,\n                password2: password2,\n                address: address,\n                status: status\n              };\n              Auth = isAuthenticated();\n              _context.next = 4;\n              return edit(id, user, Auth.token);\n\n            case 4:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 8;\n                break;\n              }\n\n              Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 8:\n              if (!data.error) {\n                _context.next = 11;\n                break;\n              }\n\n              Swal.fire('Oops...', data.error, 'error');\n              return _context.abrupt(\"return\", setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false\n              })));\n\n            case 11:\n              if (!data.message) {\n                _context.next = 16;\n                break;\n              }\n\n              Swal.fire('Saved...', data.message, 'success');\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loadingBtn: false,\n                redirectToPage: true\n              }));\n              Toast = Swal.mixin({\n                toast: true,\n                timerProgressBar: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000\n              });\n              return _context.abrupt(\"return\", Toast.fire({\n                animation: true,\n                type: 'success',\n                title: data.message\n              }));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/admin/districts/read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 20\n      }, _this);\n    }\n  };\n\n  React.useEffect(function () {\n    var ignore = false;\n\n    var bootstrap = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var Auth, data, _data$data, _code, _names, _email, _phone, _address;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return isAuthenticated();\n\n              case 2:\n                Auth = _context2.sent;\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: true\n                  });\n                });\n                _context2.next = 6;\n                return read(id, Auth.token);\n\n              case 6:\n                data = _context2.sent;\n\n                if (ignore) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                if (data) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context2.abrupt(\"return\");\n\n              case 12:\n                if (!data.error) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                Swal.fire('Oops...', data.error, 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context2.abrupt(\"return\");\n\n              case 16:\n                if (!data.message) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                _data$data = data.data, _code = _data$data.code, _names = _data$data.names, _email = _data$data.email, _phone = _data$data.phone, _address = _data$data.address;\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: false,\n                    code: _code,\n                    phone: _phone,\n                    email: _email,\n                    names: _names,\n                    address: _address\n                  });\n                });\n                return _context2.abrupt(\"return\", Swal.fire('Great', data.message, 'success'));\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function bootstrap() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    bootstrap();\n    return function () {\n      ignore = true;\n    };\n  }, [reload, id]);\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [redirectUser(), isError(), loading ? isLoading() : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/admin/districts/read\",\n                children: \" Read Districts \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                as: \"h3\",\n                children: \"Update the District\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      controlId: \"formBasicEmail\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"District Code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"district code\",\n                        onChange: handleChange(\"code\"),\n                        value: code,\n                        disabled: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      controlId: \"formBasicEmail\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"District Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"district name\",\n                        onChange: handleChange(\"names\"),\n                        value: names\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      controlId: \"formBasicEmail\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Phone \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"district phone\",\n                        onChange: handleChange(\"phone\"),\n                        value: phone\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      controlId: \"formBasicPassword\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"password\",\n                        placeholder: \"Password\",\n                        onChange: handleChange(\"password\"),\n                        value: password\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 49\n                    }, this), loadingBtn ? \"loading ...\" : /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      onClick: submit,\n                      children: \"Update..\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 82\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicEmail\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Address \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"building/house name, city\",\n                      onChange: handleChange(\"address\"),\n                      value: address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicEmail\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Officer-in- charge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Education District ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"email \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"email\",\n                      placeholder: \"email\",\n                      onChange: handleChange(\"email\"),\n                      value: email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicPassword\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Password Confirmation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"password\",\n                      placeholder: \"Password Confirmation\",\n                      onChange: handleChange(\"password2\"),\n                      value: password2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Edit, \"nNvD7mgGNotv9dihpMzDb2x9q1s=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/district/Edit.js"],"names":["React","Row","Col","Card","Form","Button","Swal","useParams","Redirect","Link","edit","read","Aux","isAuthenticated","Edit","id","useState","code","names","phone","address","email","status","password","password2","loading","loadingBtn","redirectToPage","error","reload","token","values","setValues","handleChange","name","event","target","value","isLoading","isError","handleReload","preventDefault","submit","fire","handleUpdate","user","Auth","data","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","redirectUser","useEffect","ignore","bootstrap","v"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport Swal from 'sweetalert2'\r\nimport { useParams, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport { edit, read } from './api';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport { isAuthenticated } from '../../Auth/admin/api';\r\n\r\n\r\nexport default function Edit() {\r\n    let { id } = useParams();\r\n\r\n    const [values, setValues] = React.useState({\r\n        code:\"\",\r\n        names:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        status:true,\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        loadingBtn:false,\r\n        redirectToPage:false,\r\n        error:false,\r\n        reload:false,\r\n        token:'00033'\r\n        \r\n    })\r\n\r\n    const {code, names, phone, email, password, password2, address, status, error, loading, loadingBtn, reload, redirectToPage} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const isLoading= () => {\r\n        if(loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Wait !!!.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Requesting for District  data</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Error in reading this user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>failed to read district data, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:false, error:false, reload:!reload})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loadingBtn:true})\r\n        if(code===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District code is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District name is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n        if(password===\"\"){ \r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loadingBtn:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n\r\n        handleUpdate();\r\n    }\r\n\r\n    const handleUpdate =async ()=>{\r\n        const user = {code, names, phone, email, password, password2, address, status}\r\n        const Auth = isAuthenticated()\r\n        const data = await edit(id, user, Auth.token);\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loadingBtn:false})\r\n        }\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n            setValues({...values, loadingBtn:false, redirectToPage:true});\r\n            let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n           });\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: data.message\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/districts/read\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let ignore = false;\r\n        const bootstrap = async ()=>{\r\n            const Auth = await isAuthenticated()\r\n            setValues(v => ({...v, loading:true}))\r\n            const data = await read(id,Auth.token);\r\n            if (!ignore){\r\n                if(!data){\r\n                    Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\r\n                    setValues(v => ({...v, loading:false, error:true}))  \r\n                    return  \r\n                }\r\n                if(data.error){\r\n                    Swal.fire('Oops...', data.error, 'error')\r\n                    setValues(v => ({...v, loading:false, error:true})) \r\n                    return \r\n                }\r\n        \r\n                if(data.message){\r\n                    const {code, names, email, phone,address } = data.data;\r\n                    setValues(v => ({...v, loading:false, error:false, code, phone,email,names, address }))\r\n                    return Swal.fire('Great', data.message, 'success');\r\n                } \r\n            }\r\n        }\r\n        bootstrap()\r\n        return () => { ignore = true };\r\n    },[reload, id])\r\n\r\n    return (\r\n        <Aux>\r\n        {redirectUser()}\r\n        {isError()}\r\n        {\r\n            loading ? isLoading() :\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Header>\r\n                            <Card.Title><Link to=\"/admin/districts/read\" > Read Districts </Link></Card.Title>\r\n                        </Card.Header>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h3\">Update the District</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>District Code</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"district code\" onChange={handleChange(\"code\")} value={code} disabled />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>District Name</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"district name\" onChange={handleChange(\"names\")} value={names} />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Phone </Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"district phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"formBasicPassword\">\r\n                                                    <Form.Label>Password</Form.Label>\r\n                                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                                </Form.Group>\r\n                                                {\r\n                                                    loadingBtn ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Update..</Button>\r\n                                                }\r\n                                            </Form>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                        <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Address </Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"building/house name, city\" onChange={handleChange(\"address\")} value={address} />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Officer-in- charge</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"Education District ID\" />\r\n                                                </Form.Group>\r\n                                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                <Form.Label>email </Form.Label>\r\n                                                <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password Confirmation</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                </Row>\r\n            </>\r\n        } \r\n        </Aux>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}