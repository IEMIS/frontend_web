{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\session\\\\One.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Swal from 'sweetalert2';\nimport { read } from './api';\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from '../../Auth/admin/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function One() {\n  _s();\n\n  var _this = this;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState({\n    name: \"\",\n    slung: \"\",\n    loading: false,\n    redirectToPage: false,\n    error: false,\n    reload: false,\n    loadingBtn: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var name = values.name,\n      slung = values.slung,\n      error = values.error,\n      loading = values.loading,\n      reload = values.reload,\n      redirectToPage = values.redirectToPage;\n\n  var redirectUser = function redirectUser() {\n    if (redirectToPage) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/admin/session/read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, _this);\n    }\n  };\n\n  var isLoading = function isLoading() {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Wait !!!.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Requesting for Session  data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var isError = function isError() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h5\",\n                  children: \"Error in reading this user .\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: [\"Session data failed to read, Try again \", /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"primary\",\n                        onClick: handleReload,\n                        children: \"Reload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 66,\n                        columnNumber: 84\n                      }, _this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 41\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n\n  var handleReload = function handleReload(event) {\n    event.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: false,\n      error: false,\n      reload: !reload\n    }));\n  };\n\n  React.useEffect(function () {\n    var bootstrap = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var Auth, data, Toast;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Auth = isAuthenticated();\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: true\n                  });\n                });\n                _context.next = 4;\n                return read(id, Auth.token);\n\n              case 4:\n                data = _context.sent;\n\n                if (data) {\n                  _context.next = 9;\n                  break;\n                }\n\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context.abrupt(\"return\");\n\n              case 9:\n                if (!data.error) {\n                  _context.next = 13;\n                  break;\n                }\n\n                Swal.fire('Oops...', data.error, 'error');\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: true\n                  });\n                });\n                return _context.abrupt(\"return\");\n\n              case 13:\n                if (!data.message) {\n                  _context.next = 17;\n                  break;\n                }\n\n                setValues(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    loading: false,\n                    error: false,\n                    name: data.data.name,\n                    slung: data.data.slung\n                  });\n                });\n                Toast = Swal.mixin({\n                  toast: true,\n                  timerProgressBar: true,\n                  position: 'top-end',\n                  showConfirmButton: false,\n                  timer: 3000\n                });\n                return _context.abrupt(\"return\", Toast.fire({\n                  showClass: true,\n                  type: 'success',\n                  title: data.message\n                }));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function bootstrap() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    bootstrap();\n  }, [reload, id]);\n\n  var Back = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                redirectToPage: true\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function Back() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [redirectUser(), isError(), isLoading(), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              onClick: Back,\n              children: \"Back..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Session  : \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Session Description : \", slung]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(One, \"2AVqd3jIZpWcb1go3cVavdkWcDU=\", false, function () {\n  return [useParams];\n});\n\n_c = One;\n\nvar _c;\n\n$RefreshReg$(_c, \"One\");","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/session/One.js"],"names":["React","Row","Col","Card","Button","Aux","Swal","read","useParams","Redirect","isAuthenticated","One","id","useState","name","slung","loading","redirectToPage","error","reload","loadingBtn","values","setValues","redirectUser","isLoading","isError","handleReload","event","preventDefault","useEffect","bootstrap","Auth","v","token","data","fire","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","showClass","type","title","Back"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {read} from './api';\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from '../../Auth/admin/api';\r\n\r\nexport default function One() {\r\n    let { id } = useParams();\r\n    const [values, setValues] = React.useState({\r\n        name:\"\",\r\n        slung:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        error:false,\r\n        reload:false,\r\n        loadingBtn:false,\r\n    })\r\n    const {name, slung, error, loading, reload, redirectToPage } = values\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/session/read\" />\r\n        }\r\n    };\r\n\r\n    const isLoading= () => {\r\n        if(loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Wait !!!.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Requesting for Session  data</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Error in reading this user .</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Session data failed to read, Try again <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:false, error:false, reload:!reload})\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const bootstrap = async ()=>{\r\n            const Auth = isAuthenticated();\r\n            setValues(v => ({...v, loading:true}))\r\n            const data = await read(id, Auth.token);\r\n            if(!data){\r\n                Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error');\r\n                setValues(v => ({...v, loading:false, error:true}))  \r\n                 return  \r\n            }\r\n            if(data.error){\r\n                Swal.fire('Oops...', data.error, 'error')\r\n                setValues(v => ({...v, loading:false, error:true})) \r\n                return \r\n            }\r\n            if(data.message){\r\n                setValues(v => ({...v, loading:false, error:false, name:data.data.name, slung:data.data.slung, }))\r\n                let Toast = Swal.mixin({\r\n                    toast: true,\r\n                    timerProgressBar: true,\r\n                        position: 'top-end',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                });\r\n                return Toast.fire({\r\n                        showClass: true,\r\n                        type: 'success',\r\n                        title: data.message\r\n                })\r\n            }  \r\n        }\r\n        bootstrap()\r\n    },[reload, id])\r\n\r\n    const Back = async ()=>{\r\n        setValues({...values, redirectToPage:true })\r\n    }\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            {isError()}\r\n            {isLoading()}\r\n            <Row>\r\n                <Col>\r\n                    <Card.Header>\r\n                        <Card.Title><Button variant=\"outline-primary\" onClick={Back}>Back..</Button>  </Card.Title>\r\n                    </Card.Header>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Card.Body>\r\n                    <Col>Session  : {name}</Col><Col>Session Description : {slung}</Col>\r\n                </Card.Body>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}