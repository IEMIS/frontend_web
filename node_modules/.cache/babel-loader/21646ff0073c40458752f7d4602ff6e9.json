{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\VP\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\screen\\\\admin\\\\IndicatorData.js\";\nimport React from 'react';\nimport { Row, Col, Card, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport NVD3Chart from 'react-nvd3';\nimport { countStudentByGender, countStudentByClass, countSchoolByOwnership, countTeacherBySchool } from \"./api\";\nimport Aux from \"../../hoc/_Aux\";\n/*\r\nimport DEMO from \"../../store/constant\";\r\n\r\nimport avatar1 from '../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../assets/images/user/avatar-3.jpg';\r\n*/\n\nvar IndicatorData = /*#__PURE__*/function (_React$Component) {\n  _inherits(IndicatorData, _React$Component);\n\n  var _super = _createSuper(IndicatorData);\n\n  function IndicatorData(props) {\n    var _this;\n\n    _classCallCheck(this, IndicatorData);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      countbygender: [],\n      countbydistrict: [],\n      countbyschool: [],\n      countbyeduLevel: [],\n      countbyownership: [],\n      countbytype: [],\n      countbycat: [],\n      countbyclass: [],\n      countTeachbySchool: []\n    };\n    return _this;\n  }\n\n  _createClass(IndicatorData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var Auth, countbygen, countbyowner, countbyclass, countTeachbySchoolResp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return JSON.parse(localStorage.getItem('admin-Auth'));\n\n              case 2:\n                Auth = _context.sent;\n                _context.next = 5;\n                return countStudentByGender(Auth.token);\n\n              case 5:\n                countbygen = _context.sent;\n                _context.next = 8;\n                return countSchoolByOwnership(Auth.token);\n\n              case 8:\n                countbyowner = _context.sent;\n                _context.next = 11;\n                return countStudentByClass(Auth.token);\n\n              case 11:\n                countbyclass = _context.sent;\n                _context.next = 14;\n                return countTeacherBySchool(Auth.token);\n\n              case 14:\n                countTeachbySchoolResp = _context.sent;\n                this.setState({\n                  countbygender: countbygen.data,\n                  countbyownership: countbyowner.data,\n                  countbyclass: countbyclass.data,\n                  countTeachbySchool: countTeachbySchoolResp.data\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidUpdate() {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"UNSAFE_componentWillUnmount\",\n    value: function () {\n      var _UNSAFE_componentWillUnmount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function UNSAFE_componentWillUnmount() {\n        return _UNSAFE_componentWillUnmount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillUnmount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          countbygender = _this$state.countbygender,\n          countbyownership = _this$state.countbyownership,\n          countTeachbySchool = _this$state.countTeachbySchool; ///console.log({countbygender, countbyownership, countbyclass,countbyclass, countTeachbySchool})\n\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }, \"Choose District\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlSelect1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }\n      }, \"District\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }\n      }, \"Select district\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 49\n        }\n      }, \"Select district\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 49\n        }\n      }, \"Select district\")))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, \"Choose Session\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlSelect1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }, \"Session\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 49\n        }\n      }, \"select session \"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 49\n        }\n      }, \"2020 Academic Session\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 49\n        }\n      }, \"2019 Academic Session\"))))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 41\n        }\n      }, \"Gross Intake Ratio\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }\n      }, \"Total GIR (%):   \", true ? countbygender.map(function (data, i) {\n        var total = 0.0;\n        var r = data.count * 100 / 100;\n        total += r;\n        console.log(r, total);\n        return null;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/students\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbygender,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 39\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }\n      }, \"Net Intake Ratio\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 37\n        }\n      }, \"Total NIR (%):  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 41\n        }\n      }, \"Adjusted Net Intake Ratio\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 37\n        }\n      }, \"Total ANIR (%):  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 37\n        }\n      })))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 37\n        }\n      }, \"Gross Enrolment Ratio\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 37\n        }\n      }, \"Net Enrolment Ratio (%)\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        xl: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 37\n        }\n      }, \"Age Specific Enrolment Ratio (%)\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 41\n        }\n      }, \"Out of School Children\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 37\n        }\n      }, \"Total OOS (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 37\n        }\n      }, \"School Life Expectancy (%)\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 37\n        }\n      }, \"Transition Rate (%)\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        xl: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 37\n        }\n      }, \"Repetition Rate by Grade (%)\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        xl: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 37\n        }\n      }, \"Survival Rate by Grade (%)\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 37\n        }\n      }, \"Survival Rate by Grade (%)\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 41\n        }\n      }, \"Years-Input Per Graduate\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }\n      }, \"Total YIPG (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 37\n        }\n      }, \"% of Repeater by Education Level by Gender\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 37\n        }\n      }, \"Pupil-Teacher Ratio\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 37\n        }\n      }, \"Pupil-Teacher Ratio\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 41\n        }\n      }, \"% of Female Teachers\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 37\n        }\n      }, \"Total PFT (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 41\n        }\n      }, \"% of Private Enrolment\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 37\n        }\n      }, \"Total PE (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 41\n        }\n      }, \"% of Private Teachers by Education Level\")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 37\n        }\n      }, \"Total PE (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 41\n        }\n      }, \"% of Secondary Enrolment distribtion by Orientation \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 37\n        }\n      }, \"Total PDES (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 41\n        }\n      }, \"Gross Intake Ratio in YR8 \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 37\n        }\n      }, \"Total GIRLG (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 41\n        }\n      }, \"Expected Gross Intake Ratio in YR8 \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 37\n        }\n      }, \"Total EGIRLG (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 41\n        }\n      }, \" Gross Primary Graduaion Ratio \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 37\n        }\n      }, \"Total GPGR (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 41\n        }\n      }, \"Expected Gross Primary Graduation Ratio \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 37\n        }\n      }, \"Total EGPGR (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 41\n        }\n      }, \"% ECCE Experience  \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 37\n        }\n      }, \"Total EGPGR (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 37\n        }\n      }, \"Promotion Rate by Grade\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"Recent-Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 37\n        }\n      }, \"Drop Out Rate by Grade\")), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"px-0 py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"barChart\",\n        type: \"multiBarChart\",\n        datum: countTeachbySchool,\n        x: \"eduLevel\",\n        y: \"count\",\n        height: 380,\n        showValues: true,\n        groupSpacing: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 41\n        }\n      }, \"% GER (ECCE) \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 37\n        }\n      }, \"Total EGPGR (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 41\n        }\n      }, \"% Trained Teacher (Public) \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 37\n        }\n      }, \"Total Trained Teacher-Public (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 41\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 41\n        }\n      }, \"% Trained Teacher (Private) \")), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 37\n        }\n      }, \"Total Trained Teacher-Private (%) :  \", true ? countbyownership.map(function (data, i) {\n        var total = 0;\n        total += data.count;\n        return total;\n      }) : \"data not available\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/schools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NVD3Chart, {\n        id: \"chart\",\n        height: 200,\n        type: \"pieChart\",\n        datum: countbyownership,\n        x: \"_id\",\n        y: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 41\n        }\n      })))))));\n    }\n  }]);\n\n  return IndicatorData;\n}(React.Component);\n\nexport default IndicatorData;","map":{"version":3,"sources":["C:/Users/VP/web/src/screen/admin/IndicatorData.js"],"names":["React","Row","Col","Card","Form","Link","NVD3Chart","countStudentByGender","countStudentByClass","countSchoolByOwnership","countTeacherBySchool","Aux","IndicatorData","props","state","countbygender","countbydistrict","countbyschool","countbyeduLevel","countbyownership","countbytype","countbycat","countbyclass","countTeachbySchool","JSON","parse","localStorage","getItem","Auth","token","countbygen","countbyowner","countTeachbySchoolResp","setState","data","map","i","total","r","count","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card,Form} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport NVD3Chart from 'react-nvd3';\r\n\r\n\r\nimport {countStudentByGender, countStudentByClass, countSchoolByOwnership, countTeacherBySchool} from \"./api\"\r\nimport Aux from \"../../hoc/_Aux\";\r\n/*\r\nimport DEMO from \"../../store/constant\";\r\n\r\nimport avatar1 from '../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../assets/images/user/avatar-3.jpg';\r\n*/\r\n\r\nclass IndicatorData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            countbygender:[],\r\n            countbydistrict:[],\r\n            countbyschool : [],\r\n            countbyeduLevel :[],\r\n            countbyownership:[],\r\n            countbytype: [],\r\n            countbycat : [],\r\n            countbyclass:[],\r\n            countTeachbySchool:[],\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n      const Auth = await JSON.parse(localStorage.getItem('admin-Auth'));\r\n      const countbygen = await countStudentByGender(Auth.token)\r\n      const countbyowner = await countSchoolByOwnership(Auth.token)\r\n      const countbyclass = await countStudentByClass(Auth.token)\r\n      const countTeachbySchoolResp = await countTeacherBySchool(Auth.token)\r\n      this.setState({countbygender:countbygen.data, countbyownership:countbyowner.data, countbyclass:countbyclass.data, countTeachbySchool:countTeachbySchoolResp.data})\r\n        \r\n    }\r\n\r\n    async componentDidUpdate(){\r\n\r\n    }\r\n\r\n    async UNSAFE_componentWillUnmount(){\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const {countbygender, countbyownership,countTeachbySchool} = this.state;\r\n        ///console.log({countbygender, countbyownership, countbyclass,countbyclass, countTeachbySchool})\r\n        return (\r\n            <Aux>\r\n                    <Row>\r\n                        <Col md={4} xl={4}>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title>\r\n                                        Choose District\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                        <Form.Label>District</Form.Label>\r\n                                        <Form.Control as=\"select\">\r\n                                                <option>Select district</option>\r\n                                                <option>Select district</option>\r\n                                                <option>Select district</option>\r\n                                               {\r\n                                                  /*\r\n                                                   districtList && districtList.length > 0 \r\n                                                   ?\r\n                                                   districtList.map((dist, id)=>{\r\n                                                       return(\r\n                                                        <option value={dist._id}>{dist.names}</option>\r\n                                                       ) \r\n                                                   }) : <option value=\"0\">Fails to fetch district</option>\r\n                                                   */\r\n                                               }\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title>\r\n                                        Choose Session\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                        <Form.Label>Session</Form.Label>\r\n                                        <Form.Control as=\"select\">\r\n                                            {/*Use current session as default */}\r\n                                                <option>select session </option>\r\n                                                <option>2020 Academic Session</option>\r\n                                                <option>2019 Academic Session</option>\r\n                                               {\r\n                                                  /*\r\n                                                   sessionList && sessionList.length > 0 \r\n                                                   ?\r\n                                                   sessionList.map((sess, id)=>{\r\n                                                       return(\r\n                                                        <option value={sess._id}>{sess.names}</option>\r\n                                                       ) \r\n                                                   }) : <option value=\"0\">Fails to fetch session</option>\r\n                                                   */\r\n                                               }\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={4} xl={4}>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title>\r\n                                        <h5>Gross Intake Ratio</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total GIR (%):   {\r\n                                       true ? countbygender.map((data, i)=>{\r\n                                        let total = 0.0;\r\n                                        let r = data.count * 100/100\r\n                                        total += r\r\n                                        console.log(r, total)\r\n                                        return null\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/students\">\r\n                                      <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbygender} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title>\r\n                                        <h5>Net Intake Ratio</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total NIR (%):  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title>\r\n                                        <h5>Adjusted Net Intake Ratio</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total ANIR (%):  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                  <Link to=\"/admin/schools\">\r\n                                    <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                  </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6} xl={6}>\r\n                        {/* ===== GER Group by education level and display by gender======*/}\r\n                        <Card className='Recent-Users'>\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Gross Enrolment Ratio</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                            </Col>\r\n                            <Col md={6} xl={6}>\r\n                        {/* =====NER Group by education level and display by gender======*/}\r\n                        <Card className='Recent-Users'>\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Net Enrolment Ratio (%)</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                            </Col>\r\n                            </Row>\r\n                   \r\n                    <Row>\r\n                        <Col md={12} xl={12}>\r\n                            {/* =====ASER group by Age and display by gender ======*/}\r\n                            <Card className='Recent-Users'>\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Age Specific Enrolment Ratio (%)</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={4} xl={4}>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title>\r\n                                        <h5>Out of School Children</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total OOS (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                         {/* =====SLE group by Age and display by gender ======*/}\r\n                        <Card className='Recent-Users'>\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>School Life Expectancy (%)</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card className='Recent-Users'>\r\n                            {/* =====TR group by prep, YR8 and YR 10 =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Transition Rate (%)</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12} xl={12}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*=====RR group by Grade =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Repetition Rate by Grade (%)</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        </Row>\r\n                    <Row>\r\n                    <Col md={12} xl={12}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*=====SR group by Grade =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Survival Rate by Grade (%)</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        </Row>\r\n                    <Row>\r\n                        <Col md={4} xl={4}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*=====SR group by Grade =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Survival Rate by Grade (%)</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title>\r\n                                        <h5>Years-Input Per Graduate</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total YIPG (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*=====%Repeater group by education level =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>% of Repeater by Education Level by Gender</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                <Row>\r\n                <Col md={6} xl={6}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*=====Pupil-Teacher Ratio by Education Level Public School =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Pupil-Teacher Ratio</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>  \r\n                        <Col md={6} xl={6}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*====Enrolment by public and private by Education level =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Pupil-Teacher Ratio</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>  \r\n                </Row>\r\n                <Row>\r\n                <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====Pupil-Teacher Ratio by Education Level Private Schools =======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% of Female Teachers</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total PFT (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====Private Enrolment by Education Level =======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% of Private Enrolment</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total PE (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====PERCENTAGE OF TEACHING STAFF IN PRIVATE EDUCATIONAL INSTITUTION=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% of Private Teachers by Education Level</h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total PE (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====PERCENTAGE DISTRIBUTION OF ENROLMENT IN SECONDARY EDUCATION BY ORIENTATION=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% of Secondary Enrolment distribtion by Orientation </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total PDES (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====GROSS INTAKE RATIO IN THE LAST GRADE OF PRIMARY=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>Gross Intake Ratio in YR8 </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total GIRLG (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====EXPECTED GROSS INTAKE RATIO IN THE LAST GRADE OF PRIMARY (EGIRLG)=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>Expected Gross Intake Ratio in YR8 </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total EGIRLG (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====GROSS PRIMARY GRADUATION RATIO (GPGR)=======*/}\r\n                                    <Card.Title>\r\n                                        <h5> Gross Primary Graduaion Ratio </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total GPGR (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====EXPECTED GROSS PRIMARY GRADUATION RATIO (EGPGR)=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>Expected Gross Primary Graduation Ratio </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total EGPGR (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====PERCENTAGE OF NEW ENTRANTS TO PRIMARY EDUCATION WITH ECCE EXPERIENCE=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% ECCE Experience  </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total EGPGR (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                <Col md={6} xl={6}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*=====PROMOTION RATE BY GRADE (PR) =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Promotion Rate by Grade</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>  \r\n                <Col md={6} xl={6}>\r\n                        <Card className='Recent-Users'>\r\n                            {/*=====DROPOUT RATE BY GRADE (DR) =======*/}\r\n                                <Card.Header>\r\n                                    <Card.Title as='h5'>Drop Out Rate by Grade</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='px-0 py-2'>\r\n                                    <NVD3Chart id=\"barChart\" type=\"multiBarChart\" datum={countTeachbySchool} x=\"eduLevel\" y=\"count\" height={380} showValues groupSpacing={0.5} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>  \r\n                </Row>\r\n                <Row>\r\n                <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====GROSS ENROLMENT RATIO IN EARLY CHILDHOOD CARE AND EDUCATION (GER/ECCE)=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% GER (ECCE) </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total EGPGR (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====PERCENTAGE OF TRAINED TEACHERS Public=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% Trained Teacher (Public) </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total Trained Teacher-Public (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={4} xl={4}>\r\n                        <Card>\r\n                                <Card.Header>\r\n                                 {/*=====PERCENTAGE OF TRAINED TEACHERS Public=======*/}\r\n                                    <Card.Title>\r\n                                        <h5>% Trained Teacher (Private) </h5>\r\n                                    </Card.Title>\r\n                                    <Card.Title>\r\n                                        Total Trained Teacher-Private (%) :  {\r\n                                     true ? countbyownership.map((data, i)=>{\r\n                                        let total = 0;\r\n                                        total += data.count\r\n                                        return total\r\n                                    }):\"data not available\" }\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Link to=\"/admin/schools\">\r\n                                        <NVD3Chart id=\"chart\" height={200} type=\"pieChart\" datum={countbyownership} x=\"_id\" y=\"count\"  />\r\n                                    </Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndicatorData;"]},"metadata":{},"sourceType":"module"}