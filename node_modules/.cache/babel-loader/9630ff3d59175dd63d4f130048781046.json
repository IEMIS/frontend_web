{"ast":null,"code":"import _objectSpread from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/VP/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\VP\\\\web\\\\src\\\\App\\\\layout\\\\TeacherLayout\\\\index.js\";\nimport React, { Component, Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Fullscreen from \"react-full-screen\";\nimport windowSize from 'react-window-size';\nimport Navigation from './Navigation';\nimport NavBar from './NavBar';\nimport Breadcrumb from './Breadcrumb';\nimport Loader from \"../Loader\";\nimport routes from \"../../../screen/school/routes\";\nimport PrivateRoute from './PrivateRoute';\nimport Aux from \"../../../hoc/_Aux\";\nimport * as actionTypes from \"../../../store/actions\";\nimport './app.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AdminLayout = /*#__PURE__*/function (_Component) {\n  _inherits(AdminLayout, _Component);\n\n  var _super = _createSuper(AdminLayout);\n\n  function AdminLayout() {\n    var _this;\n\n    _classCallCheck(this, AdminLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.fullScreenExitHandler = function () {\n      if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\n        _this.props.onFullScreenExit();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AdminLayout, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.windowWidth > 992 && this.props.windowWidth <= 1024 && this.props.layout !== 'horizontal') {\n        this.props.onComponentWillMount();\n      }\n    }\n  }, {\n    key: \"mobileOutClickHandler\",\n    value: function mobileOutClickHandler() {\n      if (this.props.windowWidth < 992 && this.props.collapseMenu) {\n        this.props.onComponentWillMount();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* full screen exit call */\n      document.addEventListener('fullscreenchange', this.fullScreenExitHandler);\n      document.addEventListener('webkitfullscreenchange', this.fullScreenExitHandler);\n      document.addEventListener('mozfullscreenchange', this.fullScreenExitHandler);\n      document.addEventListener('MSFullscreenChange', this.fullScreenExitHandler);\n      var menu = routes.map(function (route, index) {\n        return route.component ? /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: route.path,\n          exact: route.exact,\n          name: route.name,\n          render: function render(props) {\n            return /*#__PURE__*/_jsxDEV(route.component, _objectSpread({}, props), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, _this2);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, _this2) : null;\n      });\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: /*#__PURE__*/_jsxDEV(Fullscreen, {\n          enabled: this.props.isFullScreen,\n          children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pcoded-main-container\",\n            onClick: function onClick() {\n              return _this2.mobileOutClickHandler;\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pcoded-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pcoded-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pcoded-inner-content\",\n                  children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"main-body\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"page-wrapper\",\n                      children: /*#__PURE__*/_jsxDEV(Suspense, {\n                        fallback: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 74,\n                          columnNumber: 65\n                        }, this),\n                        children: /*#__PURE__*/_jsxDEV(Switch, {\n                          children: menu\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 75,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return AdminLayout;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    defaultPath: state.defaultPath,\n    isFullScreen: state.isFullScreen,\n    collapseMenu: state.collapseMenu,\n    configBlock: state.configBlock,\n    layout: state.layout\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFullScreenExit: function onFullScreenExit() {\n      return dispatch({\n        type: actionTypes.FULL_SCREEN_EXIT\n      });\n    },\n    onComponentWillMount: function onComponentWillMount() {\n      return dispatch({\n        type: actionTypes.COLLAPSE_MENU\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(AdminLayout));","map":{"version":3,"sources":["C:/Users/VP/web/src/App/layout/TeacherLayout/index.js"],"names":["React","Component","Suspense","Switch","connect","Fullscreen","windowSize","Navigation","NavBar","Breadcrumb","Loader","routes","PrivateRoute","Aux","actionTypes","AdminLayout","fullScreenExitHandler","document","fullscreenElement","webkitIsFullScreen","mozFullScreen","msFullscreenElement","props","onFullScreenExit","windowWidth","layout","onComponentWillMount","collapseMenu","addEventListener","menu","map","route","index","component","path","exact","name","isFullScreen","mobileOutClickHandler","mapStateToProps","state","defaultPath","configBlock","mapDispatchToProps","dispatch","type","FULL_SCREEN_EXIT","COLLAPSE_MENU"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { Switch,} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Fullscreen from \"react-full-screen\";\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Navigation from './Navigation';\r\nimport NavBar from './NavBar';\r\nimport Breadcrumb from './Breadcrumb';\r\nimport Loader from \"../Loader\";\r\n\r\nimport routes from \"../../../screen/school/routes\";\r\n\r\nimport PrivateRoute from './PrivateRoute'\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\nimport './app.scss';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n    fullScreenExitHandler = () => {\r\n        if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\r\n            this.props.onFullScreenExit();\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.props.windowWidth > 992 && this.props.windowWidth <= 1024 && this.props.layout !== 'horizontal') {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    mobileOutClickHandler() {\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        /* full screen exit call */\r\n        document.addEventListener('fullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('webkitfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('mozfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('MSFullscreenChange', this.fullScreenExitHandler);\r\n\r\n        const menu = routes.map((route, index) => {\r\n            return (route.component) ? (\r\n                <PrivateRoute\r\n                    key={index}\r\n                    path={route.path}\r\n                    exact={route.exact}\r\n                    name={route.name}\r\n                    render={props => (\r\n                        <route.component {...props} />\r\n                    )} />\r\n            ) : (null);\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Fullscreen enabled={this.props.isFullScreen}>\r\n                    <Navigation />\r\n                    <NavBar />\r\n                    <div className=\"pcoded-main-container\" onClick={() => this.mobileOutClickHandler}>\r\n                        <div className=\"pcoded-wrapper\">\r\n                            <div className=\"pcoded-content\">\r\n                                <div className=\"pcoded-inner-content\">\r\n                                    <Breadcrumb />\r\n                                    <div className=\"main-body\">\r\n                                        <div className=\"page-wrapper\">\r\n                                            <Suspense fallback={<Loader/>}>\r\n                                                <Switch>\r\n                                                    {menu}\r\n                                                    {/*<Redirect from=\"/\" to={this.props.defaultPath} />*/}\r\n                                                </Switch>\r\n                                            </Suspense>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fullscreen>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        defaultPath: state.defaultPath,\r\n        isFullScreen: state.isFullScreen,\r\n        collapseMenu: state.collapseMenu,\r\n        configBlock: state.configBlock,\r\n        layout: state.layout\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFullScreenExit: () => dispatch({type: actionTypes.FULL_SCREEN_EXIT}),\r\n        onComponentWillMount: () => dispatch({type: actionTypes.COLLAPSE_MENU})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(AdminLayout));"]},"metadata":{},"sourceType":"module"}