{"version":3,"sources":["screen/admin/district/api/index.js","screen/admin/district/View.js"],"names":["BASE_URL","create","user","token","a","fetch","method","body","JSON","stringify","headers","accept","Authorization","catch","err","console","log","response","data","json","reads","read","id","edit","remove","Read","React","useState","datas","setDatas","loading","setLoading","error","setError","reload","setReload","handleReload","event","preventDefault","columun","tableHead","BtnEdit","styled","Link","BtnDetail","BtnDelete","DetailsComponent","props","rowData","variant","to","_id","DeleteComponent","EditComponent","boot","Swal","fire","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","showClass","type","title","useEffect","Header","Title","as","Body","isLoading","onClick","isError","length","className","tblData","tHead","customTd","custd","keyItem","dKey","search","ViewData"],"mappings":"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","file":"static/js/81.98067fb2.chunk.js","sourcesContent":["//let  BASE_URL = \"\",\r\n\r\nconst BASE_URL = \"https://iemis.herokuapp.com/api/v1\"\r\n\r\nexport const create = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district`,{\r\n            method:'POST',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const reads = async (token)=>{\r\n    try{\r\n        //district\r\n        const response = await fetch(`${BASE_URL}/district`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const read = async (id, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district/${id}`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const edit = async (id, user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district/${id}`,{\r\n            method:'PUT',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const remove = async (id, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district/${id}`,{\r\n            method:'DELETE',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}","\r\nimport React from 'react';\r\nimport {Row, Col, Card, Button } from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport { reads } from './api';\r\nimport { Link } from 'react-router-dom';\r\nimport SortableTbl from \"react-sort-search-table\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport default function Read() {\r\n    const [datas, setDatas] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(false)\r\n    const [reload, setReload] = React.useState(false)\r\n    \r\n\r\n    const token = \"12233\";\r\n\r\n    const isLoading = () => {\r\n        if (loading){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Wait loading data ...</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                    <h1>District List is loading </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const isError = () => {\r\n        if(error){\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Error in Loading Data.</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h1>Districts data Failed to Load, you can refresh <Button variant=\"primary\" onClick={handleReload}>Reload</Button> </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleReload = event =>{\r\n        event.preventDefault();\r\n        setError(false)\r\n        setLoading(true)\r\n        setReload(!reload) \r\n    }\r\n\r\n    let columun = [\r\n        \"code\",\r\n        \"names\",\r\n        \"email\",\r\n        \"phone\",\r\n        \"edit\",\r\n        \"detail\",\r\n        \"delete\",\r\n    ];\r\n\r\n    let tableHead = [\r\n        \"District Code\",\r\n        \"District Name\",\r\n        \"Email\",\r\n        \"Phone\",\r\n        \"Edit\",\r\n        \"Details\",\r\n        \"Delete\",\r\n    ];\r\n\r\n    const BtnEdit = styled(Link)`\r\n        padding: 10px 20px;\r\n        cursor: pointer;\r\n        border-radius: 3px;\r\n        background-color: #f0ad4e;\r\n        color: #fff;\r\n    `;\r\n    const BtnDetail = styled(Link)`\r\n        padding: 10px 20px;\r\n        cursor: pointer;\r\n        border-radius: 3px;\r\n        background-color: #3F4D67;\r\n        color: #fff;\r\n    `;\r\n\r\n    const BtnDelete = styled(Link)`\r\n        padding: 10px 20px;\r\n        cursor: pointer;\r\n        border-radius: 3px;\r\n        background-color: #d43f3a;\r\n        color: #fff;\r\n    `;\r\n\r\n    const DetailsComponent = (props) => {\r\n        const { rowData} = props;\r\n        return (\r\n            <td  variant=\"primary\"><BtnDetail to={`/admin/districts/read/${rowData._id}`}> Details </BtnDetail></td>\r\n        );\r\n    };\r\n\r\n    const DeleteComponent = (props) => {\r\n        const { rowData} = props;\r\n        return (\r\n            <td variant=\"danger\"><BtnDelete to={`/admin/districts/delete/${rowData._id}`}>Delete</BtnDelete></td>\r\n        );\r\n    };\r\n\r\n    const EditComponent = (props) => {\r\n        const { rowData} = props;\r\n        return (\r\n            <td ><BtnEdit to={`/admin/districts/edit/${rowData._id}`}>Edit</BtnEdit></td>\r\n        );\r\n    };\r\n\r\n    const ViewData = () =>{\r\n        if(datas && datas.length > 0){\r\n            return(\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h5\">District List</Card.Title>\r\n                                    <span className=\"d-block m-t-5\">manage  <code>the </code> district data here</span>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <SortableTbl\r\n                                        tblData={datas}\r\n                                        tHead={tableHead}\r\n                                        customTd={[\r\n                                            { custd: DetailsComponent, keyItem: \"detail\" },\r\n                                            { custd: EditComponent, keyItem: \"edit\" },\r\n                                            { custd: DeleteComponent, keyItem: \"delete\" },\r\n                                        ]}\r\n                                        dKey={columun}\r\n                                        search={true}\r\n                                    />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )        \r\n        }else{\r\n            /*\r\n            return (\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h5\">No record</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Aux>\r\n            )\r\n            */\r\n        }\r\n    }\r\n\r\n    const boot = async () => {\r\n        setLoading(true)\r\n        const data = await reads(token);\r\n                \r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            setLoading(false)\r\n            setError(true)\r\n            return \r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            setLoading(false)\r\n            setError(true)\r\n            return\r\n        }\r\n        if(data.message){\r\n            setLoading(false)\r\n            setError(false)\r\n            setDatas(data.data)\r\n            return Swal.fire('Successful....', data.message, 'success')\r\n        }\r\n\r\n        let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        });\r\n\r\n        return Toast.fire({\r\n            showClass: true,\r\n            type: 'success',\r\n            title: data.message\r\n        })\r\n        \r\n    }\r\n\r\n    React.useEffect(() => {\r\n        boot();\r\n    },[reload])\r\n\r\n    return (\r\n        <Aux>\r\n            {isLoading()}\r\n            {isError()}\r\n            {ViewData()}\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}