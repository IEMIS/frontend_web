{"version":3,"sources":["screen/district/staffs/api/index.js","screen/district/staffs/Create.js"],"names":["BASE_URL","create","user","token","a","fetch","method","body","JSON","stringify","headers","accept","Authorization","catch","err","console","log","response","data","json","reads","remove","readsDistrict","Create","React","useState","code","district","names","address","email","fax","mailBox","phone","province","eduLevel","ownership","estabYear","schoolCat","schoolType","headID","password","password2","loading","redirectToPage","districtList","values","setValues","handleChange","name","event","target","value","handleCreate","school","contact","Swal","fire","error","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","useEffect","dist","v","bootstrap","to","redirectUser","Header","Title","as","Body","md","Group","controlId","Label","Control","placeholder","onChange","disabled","length","map","id","_id","variant","onClick","preventDefault"],"mappings":"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","file":"static/js/98.5d80b9a6.chunk.js","sourcesContent":["//let  BASE_URL = \"\",\r\n\r\nconst BASE_URL = \"https://iemis.herokuapp.com/api/v1\"\r\n\r\nexport const create = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools`,{\r\n            method:'POST',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json', \r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\nexport const reads = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools`,{\r\n            method:'GET',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json', \r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const read = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools/${user}`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const edit = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools/${user}`,{\r\n            method:'PUT',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const remove = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools/${user}`,{\r\n            method:'DELETE',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\n//get district \r\nexport const readsDistrict = async (token)=>{\r\n    try{\r\n        //district\r\n        const response = await fetch(`${BASE_URL}/district`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { create, readsDistrict } from './api';\r\n\r\n\r\nexport default function Create() {\r\n\r\n    const [values, setValues] = React.useState({\r\n        code:\"\",\r\n        district:\"\",\r\n        names:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        fax:\"\",\r\n        mailBox:\"\",\r\n        phone:\"\",\r\n        province:\"\",\r\n        eduLevel:\"\",\r\n        ownership:\"\",\r\n        estabYear:\"\",\r\n        schoolCat:\"\",\r\n        schoolType:\"\",\r\n        headID:\"\",\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        districtList:[]\r\n    })\r\n    const {code, names,district, phone, email, password, password2, address,fax,mailBox,province,eduLevel,ownership,estabYear,schoolCat,schoolType,headID, loading, redirectToPage, districtList} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:true})\r\n        if(code===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School code is required', 'error');\r\n        }\r\n        if(district===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School Name is required', 'error');\r\n        }\r\n        if(schoolType===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School Type is required', 'error');\r\n        }\r\n        if(schoolCat===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School Category is required', 'error');\r\n        }\r\n        if(estabYear===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Establishment Year is required', 'error');\r\n        }\r\n        if(ownership===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School ownership is required', 'error');\r\n        }\r\n        if(eduLevel===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Education Level is required', 'error');\r\n        }\r\n        if(province===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School locality is required', 'error');\r\n        }\r\n        if(mailBox===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School mailBox is required', 'error');\r\n        }\r\n        if(fax===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Fax is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n\r\n        if(password===\"\") {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must empty', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n        handleCreate();\r\n    }\r\n\r\n    const handleCreate =async ()=>{\r\n        //const user = {code, names,district, phone, email, password, password2, address,fax,mailBox,province,eduLevel,ownership,estabYear,schoolCat,schoolType,headID, loading, redirectToPage, districtList}\r\n        const school = {code, names, district, email, contact:[{phone, fax, mailBox, province, address}],eduLevel, ownership, estabYear, schoolCat, schoolType, headID, password}\r\n        const data = await create(school);\r\n        console.log(data)\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n           setValues({...values, loading:false, redirectToPage:true})\r\n           let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n            });\r\n\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/schools/create\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const bootstrap = async () =>{\r\n            const dist = await readsDistrict();\r\n            let code = `SCH${`0012`}`;\r\n            setValues(v => ({...v, districtList:dist.data, code})); \r\n        }\r\n        bootstrap()\r\n    }, [])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Add New School</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>School Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"school code\" onChange={handleChange(\"code\")} value={code} disabled />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>School Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"school name\" onChange={handleChange(\"names\")} value={names} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>District</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"district\")} value={district}>\r\n                                                <option>Select district</option>\r\n                                               {\r\n                                                   districtList && districtList.length > 0 \r\n                                                   ?\r\n                                                   districtList.map((dist, id)=>{\r\n                                                       return(\r\n                                                        <option value={dist._id}>{dist.names}</option>\r\n                                                       ) \r\n                                                   }) : <option value=\"0\">Fails to fetch district</option>\r\n                                               }\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"location, province e.g Veisaru Road, Savusavu\" onChange={handleChange(\"address\")} value={address} />\r\n                                            </Form.Group>\r\n                                           \r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Locality</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"province\")} value={province}>\r\n                                                <option>Select locality</option>\r\n                                                <option value=\"Metropolian\">City Metropolian</option>\r\n                                                <option value=\"Surburban\">City Surburban</option>\r\n                                                <option value=\"Urban\">Peri Urban</option>\r\n                                                <option value=\"Remote\">Remote</option>\r\n                                                <option value=\"Rural\">Rural</option>\r\n                                                <option value=\"Town\">Town</option>\r\n                                                <option value=\"Very-Remote\">Very Remote</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Mailing Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"P.O BOX 123, Tavua\" onChange={handleChange(\"mailBox\")} value={mailBox} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"official school phone number\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Fax</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"school fax\" onChange={handleChange(\"fax\")} value={fax} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>School Head</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"staff ID\" onChange={handleChange(\"headID\")} value={headID} />\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Education Level</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"eduLevel\")} value={eduLevel}>\r\n                                                <option>Select Education Level</option>\r\n                                                <option value=\"ECCE\">ECCE</option>\r\n                                                <option value=\"Primary\">Primary</option>\r\n                                                <option value=\"Secondary\">Secondary</option>\r\n                                                <option value=\"TVET\">TVET</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Estab. Year </Form.Label>\r\n                                                <Form.Control type=\"date\" placeholder=\"year founded\" onChange={handleChange(\"estabYear\")} value={estabYear} />\r\n                                            </Form.Group>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Ownership</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"ownership\")} value={ownership}>\r\n                                                <option>Select School Ownership</option>\r\n                                                <option value=\"Community\">Community</option>\r\n                                                <option value=\"Faith-Based\">Faith-Based</option>\r\n                                                <option value=\"Government\">Government</option>\r\n                                                <option value=\"Private\">Private</option>\r\n                                                \r\n                                            </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>School Category</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"schoolCat\")} value={schoolCat}>\r\n                                                <option>Select School Category</option>\r\n                                                <option value=\"Regular\">Regular</option>\r\n                                                <option value=\"Special\">Special</option>\r\n                                            </Form.Control>\r\n                                     </Form.Group>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>School Type</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"schoolType\")} value={schoolType}>\r\n                                                <option>Select School Type</option>\r\n                                                <option value=\"Boarding\">Boarding</option>\r\n                                                <option value=\"Day\">Day</option>\r\n                                            </Form.Control>\r\n                                     </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label>Password Confirmation</Form.Label>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                        </Form.Group>\r\n                                        \r\n                                        {\r\n                                                loading ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Create ..</Button>\r\n                                            }\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Aux>\r\n    )\r\n}"],"sourceRoot":""}