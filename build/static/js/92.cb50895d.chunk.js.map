{"version":3,"sources":["screen/district/district/api/index.js","screen/district/district/Create.js"],"names":["BASE_URL","create","user","token","a","fetch","method","body","JSON","stringify","headers","accept","Authorization","catch","err","console","log","response","data","json","reads","read","id","edit","remove","Create","React","useState","code","names","phone","address","email","status","password","password2","loading","redirectToPage","values","setValues","handleChange","name","event","target","value","handleCreate","Swal","fire","error","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","title","useEffect","v","getDistrictCode","to","redirectUser","Header","Title","as","Body","md","Group","controlId","Label","Control","placeholder","onChange","variant","onClick","preventDefault"],"mappings":"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","file":"static/js/92.cb50895d.chunk.js","sourcesContent":["//let  BASE_URL = \"\",\r\n\r\nconst BASE_URL = \"https://iemis.herokuapp.com/api/v1\"\r\n\r\nexport const create = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district`,{\r\n            method:'POST',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const reads = async (token)=>{\r\n    try{\r\n        //district\r\n        const response = await fetch(`${BASE_URL}/district`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const read = async (id, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district/${id}`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const edit = async (id, user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district/${id}`,{\r\n            method:'PUT',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const remove = async (id, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/district/${id}`,{\r\n            method:'DELETE',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}","import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { create } from './api';\r\n\r\n\r\nexport default function Create() {\r\n\r\n    const [values, setValues] = React.useState({\r\n        code:\"\",\r\n        names:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        email:\"\",\r\n        status:true,\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        \r\n    })\r\n    const {code, names, phone, email, password, password2, address, status, loading, redirectToPage} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:true})\r\n        if(code===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District code is required', 'error');\r\n        }\r\n        if(names===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District name is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District Phone number is required', 'error');\r\n        }\r\n        if(address===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District address is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District email is required', 'error');\r\n        }\r\n        if(password===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password can not be an empty value', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n\r\n        handleCreate();\r\n    }\r\n\r\n    const handleCreate =async ()=>{\r\n        const user = {code, names, phone, email, password, password2, address, status}\r\n        const data = await create(user);\r\n        console.log(data)\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n            setValues({...values, loading:false, redirectToPage:true});\r\n\r\n            let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n           });\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/districts/create\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const getDistrictCode = async () =>{\r\n            //call the endpoint for code \r\n            let dcode = 'DS001'\r\n            setValues(v=>({...v, code:dcode}))\r\n        }\r\n        getDistrictCode();\r\n        /*\r\n        return () => {\r\n            //cleanup\r\n        }\r\n        */\r\n    }, [])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Add New District</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district code\" onChange={handleChange(\"code\")} value={code} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>District Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district name\" onChange={handleChange(\"names\")} value={names} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"district phone\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                            {\r\n                                                loading ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Create ..</Button>\r\n                                            }\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"building/house name, city\" onChange={handleChange(\"address\")} value={address} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Officer-in- charge</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Education District ID\" />\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label>Password Confirmation</Form.Label>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}