{"version":3,"sources":["screen/admin/staffs/api/index.js","screen/admin/staffs/Create.js"],"names":["BASE_URL","create","user","token","a","fetch","method","body","JSON","stringify","headers","accept","Authorization","catch","err","console","log","response","data","json","reads","remove","readsDistrict","Create","React","useState","staffCode","district","firstName","title","email","lastName","gender","middleName","phone","dob","role","nationality","designation","password","password2","loading","redirectToPage","districtList","values","setValues","handleChange","name","event","target","value","handleCreate","staff","Swal","fire","error","message","Toast","mixin","toast","timerProgressBar","position","showConfirmButton","timer","animation","type","useEffect","dist","code","v","bootstrap","to","redirectUser","Header","Title","as","Body","md","Group","controlId","Label","Control","placeholder","onChange","disabled","length","map","id","_id","names","variant","onClick","preventDefault"],"mappings":"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","file":"static/js/85.f43bf709.chunk.js","sourcesContent":["//let  BASE_URL = \"\",\r\n\r\nconst BASE_URL = \"https://iemis.herokuapp.com/api/v1\"\r\n\r\nexport const create = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools`,{\r\n            method:'POST',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json', \r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\nexport const reads = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools`,{\r\n            method:'GET',\r\n            body:JSON.stringify(user),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json', \r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const read = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools/${user}`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const edit = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools/${user}`,{\r\n            method:'PUT',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\nexport const remove = async (user, token)=>{\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/schools/${user}`,{\r\n            method:'DELETE',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\n//get district \r\nexport const readsDistrict = async (token)=>{\r\n    try{\r\n        //district\r\n        const response = await fetch(`${BASE_URL}/district`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                accept:'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n        const data = response.json();\r\n        return data;\r\n    }catch(e){console.log(e)}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Swal from 'sweetalert2'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { create, readsDistrict } from './api';\r\n\r\n\r\nexport default function Create() {\r\n\r\n    const [values, setValues] = React.useState({\r\n        staffCode:\"\",\r\n        district:\"\",\r\n        firstName:\"\",\r\n        title:\"\",\r\n        email:\"\",\r\n        lastName:\"\",\r\n        gender:\"\",\r\n        middleName:\"\",\r\n        phone:\"\",\r\n        dob:\"\",\r\n        role:\"\",\r\n        nationality:\"\",\r\n        designation:\"\",\r\n        password:\"\",\r\n        password2:\"\",\r\n        loading:false,\r\n        redirectToPage:false,\r\n        districtList:[]\r\n    })\r\n    const {staffCode, firstName,district, phone, email, password, password2,role, lastName,middleName,title,gender,dob, nationality,designation,loading, redirectToPage, districtList} = values\r\n\r\n    const handleChange = name=>event=>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const submit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, loading:true})\r\n        if(staffCode===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Staff code is required', 'error');\r\n        }\r\n        if(district===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'District is required', 'error');\r\n        }\r\n        if(firstName===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'First Name is required', 'error');\r\n        }\r\n        if(lastName===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Last Name is required', 'error');\r\n        }\r\n        if(gender===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Gender is required', 'error');\r\n        }\r\n        if(dob===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Date of Birth is required', 'error');\r\n        }\r\n        if(nationality===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'School ownership is required', 'error');\r\n        }\r\n        if(email===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Email is required', 'error');\r\n        }\r\n        if(phone===\"\"){ \r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Phone number is required', 'error');\r\n        }\r\n\r\n        if(password===\"\") {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must empty', 'error');\r\n        }\r\n\r\n        if(password !== password2) {\r\n            setValues({...values, loading:false})\r\n            return Swal.fire('Oops...', 'Password must match each other', 'error');\r\n        }\r\n        handleCreate();\r\n    }\r\n\r\n    const handleCreate =async ()=>{\r\n        //const user = {code, names,district, phone, email, password, password2, address,fax,mailBox,province,eduLevel,ownership,estabYear,schoolCat,schoolType,headID, loading, redirectToPage, districtList}\r\n        const staff = {staffCode, firstName, district, email, middleName, role, lastName, title, gender, dob, designation, password}\r\n        const data = await create(staff);\r\n        console.log(data)\r\n        if(!data){\r\n            Swal.fire('Oops...', 'internet server error, Please, check your network connection', 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n\r\n        if(data.error){\r\n            Swal.fire('Oops...', data.error, 'error')\r\n            return setValues({...values, loading:false})\r\n        }\r\n\r\n        if(data.message){\r\n            Swal.fire('Saved...', data.message, 'success')\r\n           setValues({...values, loading:false, redirectToPage:true})\r\n           let Toast = Swal.mixin({\r\n            toast: true,\r\n            timerProgressBar: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n            });\r\n\r\n            return Toast.fire({\r\n                animation: true,\r\n                type: 'success',\r\n                title: 'Request is successful'\r\n            })\r\n        }\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToPage){\r\n            return <Redirect to=\"/admin/staffs/create\" />\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const bootstrap = async () =>{\r\n            const dist = await readsDistrict();\r\n            let code = `MOE${`0012`}`;\r\n            setValues(v => ({...v, districtList:dist.data, code})); \r\n        }\r\n        bootstrap()\r\n    }, [])\r\n\r\n    return (\r\n        <Aux>\r\n            {redirectUser()}\r\n            <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h3\">Add New Staff</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Staff Code</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Staff code\" onChange={handleChange(\"staffCode\")} value={staffCode} disabled />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>District</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"district\")} value={district}>\r\n                                                <option>Select district</option>\r\n                                               {\r\n                                                   districtList && districtList.length > 0 \r\n                                                   ?\r\n                                                   districtList.map((dist, id)=>{\r\n                                                       return(\r\n                                                        <option value={dist._id}>{dist.names}</option>\r\n                                                       ) \r\n                                                   }) : <option value=\"0\">Fails to fetch district</option>\r\n                                               }\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Title</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"title\")} value={title}>\r\n                                                <option>Select</option>\r\n                                                <option value=\"Mr.\">Mr.</option>\r\n                                                <option value=\"Mrs.\">Mrs.</option>\r\n                                                <option value=\"Ms.\">Ms.</option>\r\n                                                <option value=\"Miss.\">Miss.</option>\r\n                                                <option value=\"Dr.\">Dr.</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>First Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"First Name\" onChange={handleChange(\"firstName\")} value={firstName} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Middle Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Middle Name\" onChange={handleChange(\"middleName\")} value={middleName} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Last Name</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Last Name\" onChange={handleChange(\"lastName\")} value={lastName} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Phone </Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"official school phone number\" onChange={handleChange(\"phone\")} value={phone} />\r\n                                            </Form.Group>\r\n                                              <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange(\"password\")} value={password} />\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                     <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Date of Birth </Form.Label>\r\n                                                <Form.Control type=\"date\" placeholder=\"dob\" onChange={handleChange(\"dob\")} value={dob} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"gender\")} value={gender}>\r\n                                                <option>Select </option>\r\n                                                <option value=\"Male\">Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Nationality</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"nationality\")} value={nationality}>\r\n                                                <option>Select </option>\r\n                                                <option value=\"Fijian\">Male</option>\r\n                                                <option value=\"Regional\">Female</option>\r\n                                                <option value=\"Foreigner\">Foreigner</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Role</Form.Label>\r\n                                            <Form.Control as=\"select\" onChange={handleChange(\"role\")} value={role}>\r\n                                                <option>Select </option>\r\n                                                <option value=\"Read1\">Read-Only</option>\r\n                                                <option value=\"Read2\">Read-Write</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                       <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Designation</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Senior Education Officer\" onChange={handleChange(\"designatioon\")} value={designation} />\r\n                                            </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                            <Form.Label>email </Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"email\" onChange={handleChange(\"email\")} value={email}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label>Password Confirmation</Form.Label>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password Confirmation\" onChange={handleChange(\"password2\")} value={password2} />\r\n                                        </Form.Group>\r\n                                        \r\n                                        {\r\n                                                loading ? \"loading ...\" : <Button variant=\"primary\" onClick={submit}  >Create ..</Button>\r\n                                            }\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Aux>\r\n    )\r\n}"],"sourceRoot":""}